#*****************************************************************************************
# Vivado (TM) v2019.2 (64-bit)
#
# mk_prj_new20200411.tcl: Tcl script for re-creating project 'RedPACPLL6-20200408-Vivado-2019-2'
#
# Generated by Vivado on Sun Apr 12 00:11:17 EDT 2020
# IP Build 2700528 on Thu Nov  7 00:09:20 MST 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (mk_prj_new20200411.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/controller_pi.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_select.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/phase_unwrap.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/McBSP_controller.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/McBSP_io_connect.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/ScaleAndAdjust.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_4s_combine.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_bram_push.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/VolumeAdjuster16_14.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_dc_filter.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_decimator.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_sc28_to_14.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/LED_connect.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/lms_phase_amplitude_detector.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/system_wrapper.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/comparator.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/logic_or.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_axis_select.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_ram_writer.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/signal_combine.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/split_signal.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/SineSDB64.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/Signed16toQ22.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/SignedQ31toQ22.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/ArrithmeticShift.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/port_slicer.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/SDB64/imports/testbeds/lms_phase_amplitude_detector_tb.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/SDB64/imports/testbeds/controller_pi_tb.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/SDB64/imports/testbeds/axis_4s_combine_tb.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/SDB64/imports/testbeds/SineSDB64_tb.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/Simulation_PAC/imports/testbeds/lms_pad_sim.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/IO_Connect/imports/testbeds/McBSP_tb.v"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/cores/axi_cfg_register_v1_0/axi_cfg_register.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/cores/axis_averager_v1_0/axis_averager.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/cores/axis_constant_v1_0/axis_constant.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/cores/axis_red_pitaya_dac_v1_0/axis_red_pitaya_dac.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/cores/axis_red_pitaya_adc_v1_0/axis_red_pitaya_adc.v"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/cfg/ports.xdc"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/cfg/clocks.xdc"
#    "/home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/testbeds/SineSDB64_tb_behav1.wcfg"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "RedPACPLL6-20200408-Vivado-2019-2"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "mk_prj_new20200411.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/RedPACPLL6-20200408-Vivado-2019-2"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z010clg400-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "platform.num_compute_units" -value "16" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "8" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "8" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "8" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "8" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "8" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "8" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "8" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "391" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/tmp/cores"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/cores/axi_cfg_register_v1_0/axi_cfg_register.v"] \
 [file normalize "${origin_dir}/cores/axis_averager_v1_0/axis_averager.v"] \
 [file normalize "${origin_dir}/cores/axis_constant_v1_0/axis_constant.v"] \
 [file normalize "${origin_dir}/cores/axis_red_pitaya_dac_v1_0/axis_red_pitaya_dac.v"] \
 [file normalize "${origin_dir}/cores/axis_red_pitaya_adc_v1_0/axis_red_pitaya_adc.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/controller_pi.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_select.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/phase_unwrap.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/McBSP_controller.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/McBSP_io_connect.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/ScaleAndAdjust.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_4s_combine.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_bram_push.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/VolumeAdjuster16_14.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_dc_filter.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_decimator.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_sc28_to_14.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/LED_connect.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/lms_phase_amplitude_detector.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/system_wrapper.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/comparator.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/logic_or.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_axis_select.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_ram_writer.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/signal_combine.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/split_signal.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/SineSDB64.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/Signed16toQ22.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/SignedQ31toQ22.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/ArrithmeticShift.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/port_slicer.v"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "system_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "verilog_define" -value "TOOL_VIVADO" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cfg/ports.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cfg/ports.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cfg/clocks.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cfg/clocks.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/cfg/clocks.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7z010clg400-1" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/cfg/clocks.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "system_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'SDB64' fileset (if not found)
if {[string equal [get_filesets -quiet SDB64] ""]} {
  create_fileset -simset SDB64
}

# Set 'SDB64' fileset object
set obj [get_filesets SDB64]
set files [list \
 [file normalize "${origin_dir}/testbeds/SineSDB64_tb_behav1.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/SDB64/imports/testbeds/lms_phase_amplitude_detector_tb.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/SDB64/imports/testbeds/controller_pi_tb.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/SDB64/imports/testbeds/axis_4s_combine_tb.v"]\
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/SDB64/imports/testbeds/SineSDB64_tb.v"]\
]
set imported_files [import_files -fileset SDB64 $files]

# Set 'SDB64' fileset file properties for remote files
# None

# Set 'SDB64' fileset file properties for local files
# None

# Set 'SDB64' fileset properties
set obj [get_filesets SDB64]
set_property -name "top" -value "lms_phase_amplitude_detector_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'Simulation_PAC' fileset (if not found)
if {[string equal [get_filesets -quiet Simulation_PAC] ""]} {
  create_fileset -simset Simulation_PAC
}

# Set 'Simulation_PAC' fileset object
set obj [get_filesets Simulation_PAC]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/Simulation_PAC/imports/testbeds/lms_pad_sim.v"]\
]
set imported_files [import_files -fileset Simulation_PAC $files]

# Set 'Simulation_PAC' fileset file properties for remote files
# None

# Set 'Simulation_PAC' fileset file properties for local files
# None

# Set 'Simulation_PAC' fileset properties
set obj [get_filesets Simulation_PAC]
set_property -name "top" -value "system_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'IO_Connect' fileset (if not found)
if {[string equal [get_filesets -quiet IO_Connect] ""]} {
  create_fileset -simset IO_Connect
}

# Set 'IO_Connect' fileset object
set obj [get_filesets IO_Connect]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/IO_Connect/imports/testbeds/McBSP_tb.v"]\
]
set imported_files [import_files -fileset IO_Connect $files]

# Set 'IO_Connect' fileset file properties for remote files
# None

# Set 'IO_Connect' fileset file properties for local files
# None

# Set 'IO_Connect' fileset properties
set obj [get_filesets IO_Connect]
set_property -name "nl.mode" -value "funcsim" -objects $obj
set_property -name "sim_mode" -value "post-synthesis" -objects $obj
set_property -name "top" -value "McBSP_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files controller_pi.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/controller_pi.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_select.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_select.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files controller_pi.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/controller_pi.v
}
if { [get_files phase_unwrap.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/phase_unwrap.v
}
if { [get_files McBSP_controller.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/McBSP_controller.v
}
if { [get_files McBSP_io_connect.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/McBSP_io_connect.v
}
if { [get_files ScaleAndAdjust.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/ScaleAndAdjust.v
}
if { [get_files axis_4s_combine.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_4s_combine.v
}
if { [get_files axis_bram_push.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_bram_push.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files VolumeAdjuster16_14.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/VolumeAdjuster16_14.v
}
if { [get_files axis_dc_filter.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_dc_filter.v
}
if { [get_files axis_decimator.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_decimator.v
}
if { [get_files axis_sc28_to_14.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/axis_sc28_to_14.v
}
if { [get_files cfg_select.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_select.v
}
if { [get_files cfg_select.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_select.v
}
if { [get_files cfg_select.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_select.v
}
if { [get_files cfg_select.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_select.v
}
if { [get_files cfg_select.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_select.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files LED_connect.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/LED_connect.v
}
if { [get_files lms_phase_amplitude_detector.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/lms_phase_amplitude_detector.v
}
if { [get_files controller_pi.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/controller_pi.v
}
if { [get_files cfg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_to_axis.v
}
if { [get_files cfg_select.v] == "" } {
  import_files -quiet -fileset sources_1 /home/pzahl/SVN/Gxsm-3.0/plug-ins/control/RedPitaya-Support/FPGA-sources/RedPACPLL6-20200408-Vivado-2019-2/RedPACPLL6-20200408-Vivado-2019-2.srcs/sources_1/imports/sources/cfg_select.v
}


# Proc to create BD system
proc cr_bd_system { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# VolumeAdjuster16_14, axis_dc_filter, axis_decimator, axis_sc28_to_14, cfg_select, cfg_select, cfg_select, cfg_select, cfg_select, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, led_connect, lms_phase_amplitude_detector, controller_pi, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_select, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, controller_pi, phase_unwrap, McBSP_controller, McBSP_io_connect, ScaleAndAdjust, axis_4s_combine, axis_bram_push, cfg_to_axis, cfg_to_axis, cfg_select, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, cfg_to_axis, controller_pi



  # CHANGE DESIGN NAME HERE
  set design_name system

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  pavel-demin:user:axis_red_pitaya_adc:1.0\
  pavel-demin:user:axis_red_pitaya_dac:1.0\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:cordic:6.0\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:util_ds_buf:2.1\
  anton-potocnik:user:axi_bram_reader:1.0\
  pavel-demin:user:axi_cfg_register:1.0\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:processing_system7:5.5\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  VolumeAdjuster16_14\
  axis_dc_filter\
  axis_decimator\
  axis_sc28_to_14\
  cfg_select\
  cfg_select\
  cfg_select\
  cfg_select\
  cfg_select\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  led_connect\
  lms_phase_amplitude_detector\
  controller_pi\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_select\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  controller_pi\
  phase_unwrap\
  McBSP_controller\
  McBSP_io_connect\
  ScaleAndAdjust\
  axis_4s_combine\
  axis_bram_push\
  cfg_to_axis\
  cfg_to_axis\
  cfg_select\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  cfg_to_axis\
  controller_pi\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: PS_data_transport
proc create_hier_cell_PS_data_transport { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_PS_data_transport() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:bram_rtl:1.0 BRAM_PORTB

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_aux

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS4

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS5

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS6

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS7

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS8


  # Create pins
  create_bd_pin -dir O McBSP_Frame
  create_bd_pin -dir O McBSP_sending
  create_bd_pin -dir I -type clk a2_clk
  create_bd_pin -dir I -type clk a_clk
  create_bd_pin -dir I -from 1023 -to 0 cfg
  create_bd_pin -dir I -from 1023 -to 0 cfg1
  create_bd_pin -dir O -from 31 -to 0 delta_frequency_monitor
  create_bd_pin -dir IO -from 7 -to 0 exp_n_io
  create_bd_pin -dir IO -from 7 -to 0 exp_p_io
  create_bd_pin -dir O -from 31 -to 0 mon_control
  create_bd_pin -dir O -from 31 -to 0 writeposition

  # Create instance: McBSP_controller, and set properties
  set block_name McBSP_controller
  set block_cell_name McBSP_controller
  if { [catch {set McBSP_controller [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $McBSP_controller eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: McBSP_io_connect, and set properties
  set block_name McBSP_io_connect
  set block_cell_name McBSP_io_connect
  if { [catch {set McBSP_io_connect [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $McBSP_io_connect eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.USE_RP_DIGITAL_IO {1} \
 ] $McBSP_io_connect

  # Create instance: ScaleAndAdjust_0, and set properties
  set block_name ScaleAndAdjust
  set block_cell_name ScaleAndAdjust_0
  if { [catch {set ScaleAndAdjust_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ScaleAndAdjust_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.GAIN_DATA_Q {15} \
 ] $ScaleAndAdjust_0

  # Create instance: axis_4s_combine_decimate, and set properties
  set block_name axis_4s_combine
  set block_cell_name axis_4s_combine_decimate
  if { [catch {set axis_4s_combine_decimate [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_4s_combine_decimate eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.BRAM_ADDR_WIDTH {15} \
   CONFIG.BRAM_DATA_WIDTH {64} \
 ] $axis_4s_combine_decimate

  # Create instance: axis_bram_push2ch64, and set properties
  set block_name axis_bram_push
  set block_cell_name axis_bram_push2ch64
  if { [catch {set axis_bram_push2ch64 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_bram_push2ch64 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.BRAM_ADDR_WIDTH {14} \
   CONFIG.BRAM_DATA_WIDTH {32} \
 ] $axis_bram_push2ch64

  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [ list \
   CONFIG.Algorithm {Minimum_Area} \
   CONFIG.Byte_Size {9} \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_32bit_Address {false} \
   CONFIG.Enable_B {Use_ENB_Pin} \
   CONFIG.Memory_Type {Simple_Dual_Port_RAM} \
   CONFIG.Operating_Mode_A {NO_CHANGE} \
   CONFIG.Port_B_Clock {100} \
   CONFIG.Port_B_Enable_Rate {100} \
   CONFIG.Read_Width_A {32} \
   CONFIG.Read_Width_B {32} \
   CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
   CONFIG.Register_PortB_Output_of_Memory_Primitives {true} \
   CONFIG.Use_Byte_Write_Enable {false} \
   CONFIG.Use_RSTA_Pin {false} \
   CONFIG.Use_RSTB_Pin {false} \
   CONFIG.Write_Depth_A {16384} \
   CONFIG.Write_Width_A {32} \
   CONFIG.Write_Width_B {32} \
   CONFIG.use_bram_block {Stand_Alone} \
 ] $blk_mem_gen_0

  # Create instance: cfg17_to_transport_auxscale, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg17_to_transport_auxscale
  if { [catch {set cfg17_to_transport_auxscale [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg17_to_transport_auxscale eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.SRC_ADDR {17} \
   CONFIG.SRC_BITS {32} \
 ] $cfg17_to_transport_auxscale

  # Create instance: cfg18_19_to_transport_auxcenter, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg18_19_to_transport_auxcenter
  if { [catch {set cfg18_19_to_transport_auxcenter [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg18_19_to_transport_auxcenter eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {48} \
   CONFIG.MAXIS_TDATA_WIDTH {48} \
   CONFIG.SRC_ADDR {18} \
   CONFIG.SRC_BITS {64} \
 ] $cfg18_19_to_transport_auxcenter

  # Create instance: cfg_select_dfreq_control, and set properties
  set block_name cfg_select
  set block_cell_name cfg_select_dfreq_control
  if { [catch {set cfg_select_dfreq_control [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_select_dfreq_control eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_SWBIT {8} \
   CONFIG.SRC_ADDR {3} \
 ] $cfg_select_dfreq_control

  # Create instance: cfg_to_transport_channel_select, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_transport_channel_select
  if { [catch {set cfg_to_transport_channel_select [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_transport_channel_select eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {9} \
 ] $cfg_to_transport_channel_select

  # Create instance: cfg_to_transport_control, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_transport_control
  if { [catch {set cfg_to_transport_control [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_transport_control eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {6} \
 ] $cfg_to_transport_control

  # Create instance: cfg_to_transport_decimation, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_transport_decimation
  if { [catch {set cfg_to_transport_decimation [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_transport_decimation eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {8} \
 ] $cfg_to_transport_decimation

  # Create instance: cfg_to_transport_dfreq_ci, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_transport_dfreq_ci
  if { [catch {set cfg_to_transport_dfreq_ci [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_transport_dfreq_ci eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_WIDTH {1024} \
   CONFIG.SRC_ADDR {2} \
 ] $cfg_to_transport_dfreq_ci

  # Create instance: cfg_to_transport_dfreq_cp, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_transport_dfreq_cp
  if { [catch {set cfg_to_transport_dfreq_cp [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_transport_dfreq_cp eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_WIDTH {1024} \
   CONFIG.SRC_ADDR {1} \
 ] $cfg_to_transport_dfreq_cp

  # Create instance: cfg_to_transport_dfreq_lower, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_transport_dfreq_lower
  if { [catch {set cfg_to_transport_dfreq_lower [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_transport_dfreq_lower eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_WIDTH {1024} \
   CONFIG.SRC_ADDR {5} \
 ] $cfg_to_transport_dfreq_lower

  # Create instance: cfg_to_transport_dfreq_set, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_transport_dfreq_set
  if { [catch {set cfg_to_transport_dfreq_set [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_transport_dfreq_set eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_WIDTH {1024} \
   CONFIG.SRC_ADDR {0} \
 ] $cfg_to_transport_dfreq_set

  # Create instance: cfg_to_transport_dfreq_upper, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_transport_dfreq_upper
  if { [catch {set cfg_to_transport_dfreq_upper [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_transport_dfreq_upper eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_WIDTH {1024} \
   CONFIG.SRC_ADDR {3} \
 ] $cfg_to_transport_dfreq_upper

  # Create instance: cfg_to_transport_nsamples, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_transport_nsamples
  if { [catch {set cfg_to_transport_nsamples [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_transport_nsamples eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {7} \
 ] $cfg_to_transport_nsamples

  # Create instance: controller_pi_dfreq, and set properties
  set block_name controller_pi
  set block_cell_name controller_pi_dfreq
  if { [catch {set controller_pi_dfreq [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $controller_pi_dfreq eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CONTROL_W {32} \
   CONFIG.IN_Q {24} \
   CONFIG.IN_W {25} \
   CONFIG.M_AXIS_CONTROL2_TDATA_WIDTH {32} \
   CONFIG.M_AXIS_CONTROL_TDATA_WIDTH {32} \
   CONFIG.USE_RESET_DATA_INPUT {0} \
 ] $controller_pi_dfreq

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins S_AXIS7] [get_bd_intf_pins axis_4s_combine_decimate/S_AXIS7]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S_AXIS8] [get_bd_intf_pins axis_4s_combine_decimate/S_AXIS8]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins S_AXIS6] [get_bd_intf_pins axis_4s_combine_decimate/S_AXIS6]
  connect_bd_intf_net -intf_net PS_Amplitude_Controller_M_AXIS_CONTROL2 [get_bd_intf_pins S_AXIS2] [get_bd_intf_pins axis_4s_combine_decimate/S_AXIS2]
  connect_bd_intf_net -intf_net PS_Amplitude_Controller_M_AXIS_PASS2 [get_bd_intf_pins S_AXIS5] [get_bd_intf_pins axis_4s_combine_decimate/S_AXIS5]
  connect_bd_intf_net -intf_net PS_BRAM_PORTA [get_bd_intf_pins BRAM_PORTB] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTB]
  connect_bd_intf_net -intf_net PS_Phase_Controller_M_AXIS_CONTROL2 [get_bd_intf_pins S_AXIS3] [get_bd_intf_pins axis_4s_combine_decimate/S_AXIS3]
  connect_bd_intf_net -intf_net PS_Phase_Controller_M_AXIS_PASS2 [get_bd_intf_pins S_AXIS4] [get_bd_intf_pins axis_4s_combine_decimate/S_AXIS4]
  connect_bd_intf_net -intf_net ScaleAndAdjust_0_M_AXIS [get_bd_intf_pins M_AXIS_aux] [get_bd_intf_pins ScaleAndAdjust_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_4s_combine_0_M_AXIS_CH1 [get_bd_intf_pins McBSP_controller/S_AXIS1] [get_bd_intf_pins axis_4s_combine_decimate/M_AXIS_CH1]
  connect_bd_intf_net -intf_net axis_4s_combine_0_M_AXIS_CH2 [get_bd_intf_pins McBSP_controller/S_AXIS2] [get_bd_intf_pins axis_4s_combine_decimate/M_AXIS_CH2]
  connect_bd_intf_net -intf_net axis_4s_combine_0_M_AXIS_CH3 [get_bd_intf_pins McBSP_controller/S_AXIS3] [get_bd_intf_pins axis_4s_combine_decimate/M_AXIS_CH3]
  connect_bd_intf_net -intf_net axis_4s_combine_0_M_AXIS_CH4 [get_bd_intf_pins McBSP_controller/S_AXIS4] [get_bd_intf_pins axis_4s_combine_decimate/M_AXIS_CH4]
  connect_bd_intf_net -intf_net axis_4s_combine_0_M_AXIS_DFREQ_LP [get_bd_intf_pins axis_4s_combine_decimate/M_AXIS_DFREQ_LP] [get_bd_intf_pins controller_pi_dfreq/S_AXIS]
  connect_bd_intf_net -intf_net axis_4s_combine_0_M_AXIS_aux [get_bd_intf_pins ScaleAndAdjust_0/S_AXIS] [get_bd_intf_pins axis_4s_combine_decimate/M_AXIS_aux]
  connect_bd_intf_net -intf_net axis_4s_combine_decimate_M_AXIS_DFREQ_DEC [get_bd_intf_pins McBSP_controller/S_AXIS5] [get_bd_intf_pins axis_4s_combine_decimate/M_AXIS_DFREQ_DEC]
  connect_bd_intf_net -intf_net controller_pi_dfreq_M_AXIS_CONTROL [get_bd_intf_pins McBSP_controller/S_AXIS8] [get_bd_intf_pins controller_pi_dfreq/M_AXIS_CONTROL]
  connect_bd_intf_net -intf_net controller_pi_dfreq_M_AXIS_CONTROL2 [get_bd_intf_pins axis_4s_combine_decimate/S_AXIS1S] [get_bd_intf_pins controller_pi_dfreq/M_AXIS_CONTROL2]
  connect_bd_intf_net -intf_net lms_phase_amplitude_detector_0_M_AXIS_SIGNAL [get_bd_intf_pins S_AXIS1] [get_bd_intf_pins axis_4s_combine_decimate/S_AXIS1]

  # Create port connections
  connect_bd_net -net McBSP_controller_0_mcbsp_data_clkr [get_bd_pins McBSP_controller/mcbsp_data_clkr] [get_bd_pins McBSP_io_connect/McBSP_clkr]
  connect_bd_net -net McBSP_controller_0_mcbsp_data_frm [get_bd_pins McBSP_Frame] [get_bd_pins McBSP_controller/mcbsp_data_frm] [get_bd_pins McBSP_io_connect/McBSP_frm]
  connect_bd_net -net McBSP_controller_0_mcbsp_data_fsx [get_bd_pins McBSP_controller/mcbsp_data_fsx] [get_bd_pins McBSP_io_connect/McBSP_fsx]
  connect_bd_net -net McBSP_controller_0_mcbsp_data_tx [get_bd_pins McBSP_controller/mcbsp_data_tx] [get_bd_pins McBSP_io_connect/McBSP_tx]
  connect_bd_net -net McBSP_controller_0_trigger [get_bd_pins McBSP_controller/trigger] [get_bd_pins axis_4s_combine_decimate/ext_trigger]
  connect_bd_net -net McBSP_io_connect_0_McBSP_clk [get_bd_pins McBSP_controller/mcbsp_clk] [get_bd_pins McBSP_io_connect/McBSP_clk]
  connect_bd_net -net McBSP_io_connect_0_McBSP_fs [get_bd_pins McBSP_controller/mcbsp_frame_start] [get_bd_pins McBSP_io_connect/McBSP_fs]
  connect_bd_net -net McBSP_io_connect_0_McBSP_nrx [get_bd_pins McBSP_controller/mcbsp_data_nrx] [get_bd_pins McBSP_io_connect/McBSP_nrx]
  connect_bd_net -net McBSP_io_connect_0_McBSP_rx [get_bd_pins McBSP_controller/mcbsp_data_rx] [get_bd_pins McBSP_io_connect/McBSP_rx]
  connect_bd_net -net McBSP_io_connect_0_RP_exp_in [get_bd_pins McBSP_io_connect/RP_exp_in] [get_bd_pins axis_4s_combine_decimate/rp_digital_in]
  connect_bd_net -net Net [get_bd_pins exp_p_io] [get_bd_pins McBSP_io_connect/exp_p_io]
  connect_bd_net -net Net1 [get_bd_pins exp_n_io] [get_bd_pins McBSP_io_connect/exp_n_io]
  connect_bd_net -net Net2 [get_bd_pins cfg1] [get_bd_pins cfg_to_transport_dfreq_ci/cfg] [get_bd_pins cfg_to_transport_dfreq_cp/cfg] [get_bd_pins cfg_to_transport_dfreq_lower/cfg] [get_bd_pins cfg_to_transport_dfreq_set/cfg] [get_bd_pins cfg_to_transport_dfreq_upper/cfg]
  connect_bd_net -net a2_clk_1 [get_bd_pins a2_clk] [get_bd_pins axis_bram_push2ch64/a2_clk]
  connect_bd_net -net axis_4s_combine_0_BR_ch1s [get_bd_pins axis_4s_combine_decimate/BR_ch1s] [get_bd_pins axis_bram_push2ch64/ch1s]
  connect_bd_net -net axis_4s_combine_0_BR_ch2s [get_bd_pins axis_4s_combine_decimate/BR_ch2s] [get_bd_pins axis_bram_push2ch64/ch2s]
  connect_bd_net -net axis_4s_combine_0_BR_next [get_bd_pins axis_4s_combine_decimate/BR_next] [get_bd_pins axis_bram_push2ch64/push_next]
  connect_bd_net -net axis_4s_combine_0_BR_reset [get_bd_pins axis_4s_combine_decimate/BR_reset] [get_bd_pins axis_bram_push2ch64/reset]
  connect_bd_net -net axis_4s_combine_0_bram_porta_addr [get_bd_pins axis_bram_push2ch64/BRAM_PORTA_addr] [get_bd_pins blk_mem_gen_0/addra]
  connect_bd_net -net axis_4s_combine_0_bram_porta_clk [get_bd_pins axis_bram_push2ch64/BRAM_PORTA_clk] [get_bd_pins blk_mem_gen_0/clka]
  connect_bd_net -net axis_4s_combine_0_bram_porta_en [get_bd_pins axis_bram_push2ch64/BRAM_PORTA_en] [get_bd_pins blk_mem_gen_0/ena]
  connect_bd_net -net axis_4s_combine_0_bram_porta_we [get_bd_pins axis_bram_push2ch64/BRAM_PORTA_we] [get_bd_pins blk_mem_gen_0/wea]
  connect_bd_net -net axis_4s_combine_0_bram_porta_wrdata [get_bd_pins axis_bram_push2ch64/BRAM_PORTA_din] [get_bd_pins blk_mem_gen_0/dina]
  connect_bd_net -net axis_4s_combine_0_writeposition [get_bd_pins writeposition] [get_bd_pins axis_4s_combine_decimate/writeposition]
  connect_bd_net -net axis_4s_combine_decimate_delta_frequency_monitor [get_bd_pins delta_frequency_monitor] [get_bd_pins axis_4s_combine_decimate/delta_frequency_monitor]
  connect_bd_net -net axis_bram_push2ch64_last_write_addr [get_bd_pins axis_4s_combine_decimate/BR_wpos] [get_bd_pins axis_bram_push2ch64/last_write_addr]
  connect_bd_net -net axis_bram_push_0_ready [get_bd_pins axis_4s_combine_decimate/BR_ready] [get_bd_pins axis_bram_push2ch64/ready]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_clk [get_bd_pins a_clk] [get_bd_pins McBSP_controller/a_clk] [get_bd_pins ScaleAndAdjust_0/a_clk] [get_bd_pins axis_4s_combine_decimate/a_clk] [get_bd_pins cfg17_to_transport_auxscale/a_clk] [get_bd_pins cfg18_19_to_transport_auxcenter/a_clk] [get_bd_pins cfg_to_transport_channel_select/a_clk] [get_bd_pins cfg_to_transport_control/a_clk] [get_bd_pins cfg_to_transport_decimation/a_clk] [get_bd_pins cfg_to_transport_dfreq_ci/a_clk] [get_bd_pins cfg_to_transport_dfreq_cp/a_clk] [get_bd_pins cfg_to_transport_dfreq_lower/a_clk] [get_bd_pins cfg_to_transport_dfreq_set/a_clk] [get_bd_pins cfg_to_transport_dfreq_upper/a_clk] [get_bd_pins cfg_to_transport_nsamples/a_clk] [get_bd_pins controller_pi_dfreq/aclk]
  connect_bd_net -net cfg18_19_to_transport_auxcenter_data [get_bd_pins axis_4s_combine_decimate/axis3_center] [get_bd_pins cfg18_19_to_transport_auxcenter/data]
  connect_bd_net -net cfg_1 [get_bd_pins cfg] [get_bd_pins cfg17_to_transport_auxscale/cfg] [get_bd_pins cfg18_19_to_transport_auxcenter/cfg] [get_bd_pins cfg_select_dfreq_control/cfg] [get_bd_pins cfg_to_transport_channel_select/cfg] [get_bd_pins cfg_to_transport_control/cfg] [get_bd_pins cfg_to_transport_decimation/cfg] [get_bd_pins cfg_to_transport_nsamples/cfg]
  connect_bd_net -net cfg_select_qcontrol_status [get_bd_pins cfg_select_dfreq_control/status] [get_bd_pins controller_pi_dfreq/enable]
  connect_bd_net -net cfg_to_axis_0_data [get_bd_pins ScaleAndAdjust_0/gain] [get_bd_pins cfg17_to_transport_auxscale/data]
  connect_bd_net -net cfg_to_channel_select_data [get_bd_pins axis_4s_combine_decimate/channel_selector] [get_bd_pins cfg_to_transport_channel_select/data]
  connect_bd_net -net cfg_to_transport_channel_select1_data [get_bd_pins axis_4s_combine_decimate/nsamples] [get_bd_pins cfg_to_transport_nsamples/data]
  connect_bd_net -net cfg_to_transport_control_data [get_bd_pins axis_4s_combine_decimate/operation] [get_bd_pins cfg_to_transport_control/data]
  connect_bd_net -net cfg_to_transport_data [get_bd_pins axis_4s_combine_decimate/ndecimate] [get_bd_pins cfg_to_transport_decimation/data]
  connect_bd_net -net cfg_to_transport_dfreq_ci_data [get_bd_pins cfg_to_transport_dfreq_ci/data] [get_bd_pins controller_pi_dfreq/ci]
  connect_bd_net -net cfg_to_transport_dfreq_cp_data [get_bd_pins cfg_to_transport_dfreq_cp/data] [get_bd_pins controller_pi_dfreq/cp]
  connect_bd_net -net cfg_to_transport_dfreq_lower_data [get_bd_pins cfg_to_transport_dfreq_lower/data] [get_bd_pins controller_pi_dfreq/limit_lower]
  connect_bd_net -net cfg_to_transport_dfreq_upper_data [get_bd_pins cfg_to_transport_dfreq_upper/data] [get_bd_pins controller_pi_dfreq/limit_upper]
  connect_bd_net -net cfg_to_transport_tau_dfreq_data [get_bd_pins cfg_to_transport_dfreq_set/data] [get_bd_pins controller_pi_dfreq/setpoint]
  connect_bd_net -net controller_pi_dfreq_mon_control [get_bd_pins mon_control] [get_bd_pins controller_pi_dfreq/mon_control]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /PS_data_transport] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.69226",
   "Default View_TopLeft":"624,-2",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0.21  2019-05-29 bk=1.5064 VDI=41 GEI=36 GUI=JA:9.0 TLS
#  -string -flagsOSRD
preplace port BRAM_PORTB -pg 1 -lvl 0 -x -40 -y 680 -defaultsOSRD
preplace port M_AXIS_aux -pg 1 -lvl 6 -x 2200 -y 730 -defaultsOSRD
preplace port S_AXIS1 -pg 1 -lvl 0 -x -40 -y 30 -defaultsOSRD
preplace port S_AXIS2 -pg 1 -lvl 0 -x -40 -y 50 -defaultsOSRD
preplace port S_AXIS3 -pg 1 -lvl 0 -x -40 -y 70 -defaultsOSRD
preplace port S_AXIS4 -pg 1 -lvl 0 -x -40 -y 320 -defaultsOSRD
preplace port S_AXIS5 -pg 1 -lvl 0 -x -40 -y 90 -defaultsOSRD
preplace port S_AXIS6 -pg 1 -lvl 0 -x -40 -y 340 -defaultsOSRD
preplace port S_AXIS7 -pg 1 -lvl 0 -x -40 -y 360 -defaultsOSRD
preplace port S_AXIS8 -pg 1 -lvl 0 -x -40 -y 380 -defaultsOSRD
preplace port McBSP_Frame -pg 1 -lvl 6 -x 2200 -y 710 -defaultsOSRD
preplace port McBSP_sending -pg 1 -lvl 6 -x 2200 -y 20 -defaultsOSRD
preplace port a2_clk -pg 1 -lvl 0 -x -40 -y 540 -defaultsOSRD
preplace port a_clk -pg 1 -lvl 0 -x -40 -y 1080 -defaultsOSRD
preplace portBus cfg -pg 1 -lvl 0 -x -40 -y 900 -defaultsOSRD
preplace portBus cfg1 -pg 1 -lvl 0 -x -40 -y 1060 -defaultsOSRD
preplace portBus exp_n_io -pg 1 -lvl 6 -x 2200 -y 800 -defaultsOSRD
preplace portBus exp_p_io -pg 1 -lvl 6 -x 2200 -y 840 -defaultsOSRD
preplace portBus writeposition -pg 1 -lvl 6 -x 2200 -y 860 -defaultsOSRD
preplace portBus delta_frequency_monitor -pg 1 -lvl 6 -x 2200 -y 820 -defaultsOSRD
preplace portBus mon_control -pg 1 -lvl 6 -x 2200 -y 1260 -defaultsOSRD
preplace inst McBSP_io_connect -pg 1 -lvl 2 -x 510 -y 200 -defaultsOSRD
preplace inst ScaleAndAdjust_0 -pg 1 -lvl 4 -x 1700 -y 730 -defaultsOSRD
preplace inst axis_bram_push2ch64 -pg 1 -lvl 4 -x 1700 -y 520 -defaultsOSRD
preplace inst blk_mem_gen_0 -pg 1 -lvl 5 -x 2060 -y 600 -defaultsOSRD
preplace inst cfg17_to_transport_auxscale -pg 1 -lvl 3 -x 1140 -y 780 -defaultsOSRD
preplace inst cfg18_19_to_transport_auxcenter -pg 1 -lvl 2 -x 510 -y 1030 -defaultsOSRD
preplace inst cfg_to_transport_channel_select -pg 1 -lvl 2 -x 510 -y 890 -defaultsOSRD
preplace inst cfg_to_transport_control -pg 1 -lvl 2 -x 510 -y 610 -defaultsOSRD
preplace inst cfg_to_transport_decimation -pg 1 -lvl 2 -x 510 -y 470 -defaultsOSRD
preplace inst cfg_to_transport_nsamples -pg 1 -lvl 2 -x 510 -y 770 -defaultsOSRD
preplace inst cfg_to_transport_dfreq_cp -pg 1 -lvl 1 -x 140 -y 1330 -defaultsOSRD
preplace inst cfg_to_transport_dfreq_set -pg 1 -lvl 1 -x 140 -y 1210 -defaultsOSRD
preplace inst cfg_to_transport_dfreq_ci -pg 1 -lvl 1 -x 140 -y 1070 -defaultsOSRD
preplace inst cfg_to_transport_dfreq_upper -pg 1 -lvl 1 -x 140 -y 1570 -defaultsOSRD
preplace inst cfg_to_transport_dfreq_lower -pg 1 -lvl 1 -x 140 -y 1450 -defaultsOSRD
preplace inst cfg_select_dfreq_control -pg 1 -lvl 1 -x 140 -y 960 -defaultsOSRD
preplace inst controller_pi_dfreq -pg 1 -lvl 2 -x 510 -y 1240 -defaultsOSRD
preplace inst McBSP_controller -pg 1 -lvl 4 -x 1700 -y 240 -defaultsOSRD
preplace inst axis_4s_combine_decimate -pg 1 -lvl 3 -x 1140 -y 400 -defaultsOSRD
preplace netloc McBSP_controller_0_mcbsp_data_clkr 1 1 4 280 10 NJ 10 NJ 10 1930
preplace netloc McBSP_controller_0_mcbsp_data_frm 1 1 5 270 20 NJ 20 NJ 20 1950 480 2170J
preplace netloc McBSP_controller_0_mcbsp_data_fsx 1 1 4 290 30 NJ 30 NJ 30 1940
preplace netloc McBSP_controller_0_mcbsp_data_tx 1 1 4 310 40 NJ 40 NJ 40 1880
preplace netloc McBSP_controller_0_trigger 1 2 3 900 50 NJ 50 1890
preplace netloc McBSP_io_connect_0_McBSP_clk 1 2 2 730J 110 1500
preplace netloc McBSP_io_connect_0_McBSP_fs 1 2 2 740J 120 1380
preplace netloc McBSP_io_connect_0_McBSP_nrx 1 2 2 750J 130 1490
preplace netloc McBSP_io_connect_0_McBSP_rx 1 2 2 760J 140 1390
preplace netloc McBSP_io_connect_0_RP_exp_in 1 2 1 770 250n
preplace netloc Net 1 2 4 720J 100 1470J 840 NJ 840 NJ
preplace netloc Net1 1 2 4 710J 60 NJ 60 NJ 60 2180J
preplace netloc Net2 1 0 1 0 1060n
preplace netloc a2_clk_1 1 0 4 NJ 540 NJ 540 730J 650 1510J
preplace netloc axis_4s_combine_0_BR_ch1s 1 3 1 1460 480n
preplace netloc axis_4s_combine_0_BR_ch2s 1 3 1 1480 500n
preplace netloc axis_4s_combine_0_BR_next 1 3 1 1490 520n
preplace netloc axis_4s_combine_0_BR_reset 1 3 1 1500 540n
preplace netloc axis_4s_combine_0_bram_porta_addr 1 4 1 1930 480n
preplace netloc axis_4s_combine_0_bram_porta_clk 1 4 1 1940 460n
preplace netloc axis_4s_combine_0_bram_porta_en 1 4 1 1910 520n
preplace netloc axis_4s_combine_0_bram_porta_we 1 4 1 1900 540n
preplace netloc axis_4s_combine_0_bram_porta_wrdata 1 4 1 1920 500n
preplace netloc axis_4s_combine_0_writeposition 1 3 3 1390J 860 NJ 860 NJ
preplace netloc axis_bram_push2ch64_last_write_addr 1 2 3 900 640 NJ 640 1890
preplace netloc axis_bram_push_0_ready 1 2 3 890 710 1400J 810 1880
preplace netloc axis_red_pitaya_adc_0_adc_clk 1 0 4 -20 1140 290 400 830 150 1450
preplace netloc cfg18_19_to_transport_auxcenter_data 1 2 1 860 420n
preplace netloc cfg_1 1 0 3 -10 900 270 700 720
preplace netloc cfg_to_axis_0_data 1 3 1 1520 750n
preplace netloc cfg_to_channel_select_data 1 2 1 880 520n
preplace netloc cfg_to_transport_channel_select1_data 1 2 1 870 500n
preplace netloc cfg_to_transport_control_data 1 2 1 850 460n
preplace netloc cfg_to_transport_data 1 2 1 N 480
preplace netloc cfg_to_transport_tau_dfreq_data 1 1 1 N 1220
preplace netloc cfg_to_transport_dfreq_cp_data 1 1 1 290 1240n
preplace netloc cfg_to_transport_dfreq_ci_data 1 1 1 270 1080n
preplace netloc cfg_to_transport_dfreq_upper_data 1 1 1 300 1280n
preplace netloc cfg_to_transport_dfreq_lower_data 1 1 1 310 1300n
preplace netloc cfg_select_qcontrol_status 1 1 1 280J 960n
preplace netloc axis_4s_combine_decimate_delta_frequency_monitor 1 3 3 1410J 820 NJ 820 NJ
preplace netloc controller_pi_dfreq_mon_control 1 2 4 NJ 1260 NJ 1260 NJ 1260 NJ
preplace netloc PS_Amplitude_Controller_M_AXIS_CONTROL2 1 0 3 0J 370 NJ 370 790J
preplace netloc Conn2 1 0 3 NJ 380 NJ 380 NJ
preplace netloc PS_Phase_Controller_M_AXIS_PASS2 1 0 3 -10J 330 NJ 330 780J
preplace netloc ScaleAndAdjust_0_M_AXIS 1 4 2 NJ 730 NJ
preplace netloc axis_4s_combine_0_M_AXIS_CH1 1 3 1 1400 120n
preplace netloc axis_4s_combine_0_M_AXIS_CH4 1 3 1 1440 180n
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_SIGNAL 1 0 3 10J 350 NJ 350 760J
preplace netloc controller_pi_dfreq_M_AXIS_CONTROL 1 2 2 810J 160 1420
preplace netloc axis_4s_combine_0_M_AXIS_CH2 1 3 1 1410 140n
preplace netloc Conn3 1 0 3 NJ 340 NJ 340 NJ
preplace netloc axis_4s_combine_0_M_AXIS_aux 1 3 1 1430 400n
preplace netloc PS_Phase_Controller_M_AXIS_CONTROL2 1 0 3 NJ 70 NJ 70 800J
preplace netloc PS_BRAM_PORTA 1 0 5 NJ 680 NJ 680 NJ 680 1520J 650 1920J
preplace netloc axis_4s_combine_0_M_AXIS_DFREQ_LP 1 1 3 310 690 NJ 690 1370
preplace netloc Conn1 1 0 3 NJ 360 NJ 360 NJ
preplace netloc PS_Amplitude_Controller_M_AXIS_PASS2 1 0 3 -20J 390 NJ 390 820J
preplace netloc controller_pi_dfreq_M_AXIS_CONTROL2 1 2 1 840 240n
preplace netloc axis_4s_combine_0_M_AXIS_CH3 1 3 1 1430 160n
preplace netloc axis_4s_combine_decimate_M_AXIS_DFREQ_DEC 1 3 1 1370 200n
levelinfo -pg 1 -40 140 510 1140 1700 2060 2200
pagesize -pg 1 -db -bbox -sgen -190 0 2480 1640
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: PS_Phase_Controller
proc create_hier_cell_PS_Phase_Controller { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_PS_Phase_Controller() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_CONTROL

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_CONTROL2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_PASS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_PASS2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS


  # Create pins
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 1023 -to 0 cfg
  create_bd_pin -dir O -from 47 -to 0 data_lower
  create_bd_pin -dir I enable
  create_bd_pin -dir O -from 31 -to 0 mon_control
  create_bd_pin -dir O -from 31 -to 0 mon_control_B
  create_bd_pin -dir O -from 31 -to 0 mon_control_lower32
  create_bd_pin -dir O -from 31 -to 0 mon_error
  create_bd_pin -dir O -from 31 -to 0 mon_signal
  create_bd_pin -dir O status_max
  create_bd_pin -dir O status_min

  # Create instance: cfg_select_phase_unwrapping, and set properties
  set block_name cfg_select
  set block_cell_name cfg_select_phase_unwrapping
  if { [catch {set cfg_select_phase_unwrapping [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_select_phase_unwrapping eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_SWBIT {2} \
   CONFIG.SRC_ADDR {3} \
 ] $cfg_select_phase_unwrapping

  # Create instance: cfg_to_axis_PhaseInc, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_axis_PhaseInc
  if { [catch {set cfg_to_axis_PhaseInc [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_axis_PhaseInc eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {48} \
   CONFIG.MAXIS_TDATA_WIDTH {48} \
   CONFIG.SRC_BITS {64} \
 ] $cfg_to_axis_PhaseInc

  # Create instance: cfg_to_ph_ci, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_ph_ci
  if { [catch {set cfg_to_ph_ci [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_ph_ci eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {12} \
   CONFIG.SRC_BITS {32} \
 ] $cfg_to_ph_ci

  # Create instance: cfg_to_ph_cp, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_ph_cp
  if { [catch {set cfg_to_ph_cp [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_ph_cp eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {11} \
   CONFIG.SRC_BITS {32} \
 ] $cfg_to_ph_cp

  # Create instance: cfg_to_ph_lower, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_ph_lower
  if { [catch {set cfg_to_ph_lower [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_ph_lower eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {48} \
   CONFIG.MAXIS_TDATA_WIDTH {48} \
   CONFIG.SRC_ADDR {15} \
   CONFIG.SRC_BITS {64} \
 ] $cfg_to_ph_lower

  # Create instance: cfg_to_ph_setpoint, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_ph_setpoint
  if { [catch {set cfg_to_ph_setpoint [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_ph_setpoint eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {10} \
 ] $cfg_to_ph_setpoint

  # Create instance: cfg_to_ph_upper, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_ph_upper
  if { [catch {set cfg_to_ph_upper [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_ph_upper eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {48} \
   CONFIG.MAXIS_TDATA_WIDTH {48} \
   CONFIG.SRC_ADDR {13} \
   CONFIG.SRC_BITS {64} \
 ] $cfg_to_ph_upper

  # Create instance: phase_controller, and set properties
  set block_name controller_pi
  set block_cell_name phase_controller
  if { [catch {set phase_controller [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $phase_controller eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AMCONTROL_ALLOW_NEG_SPECIAL {0} \
   CONFIG.AUTO_RESET_AT_LIMIT {0} \
   CONFIG.AXIS_TDATA_WIDTH {32} \
   CONFIG.CONTROL2_W {44} \
   CONFIG.IN_Q {21} \
   CONFIG.IN_W {24} \
   CONFIG.M_AXIS_CONTROL2_TDATA_WIDTH {48} \
   CONFIG.M_AXIS_CONTROL_TDATA_WIDTH {48} \
 ] $phase_controller

  # Create instance: phase_unwrap, and set properties
  set block_name phase_unwrap
  set block_cell_name phase_unwrap
  if { [catch {set phase_unwrap [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $phase_unwrap eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins M_AXIS_CONTROL2] [get_bd_intf_pins phase_controller/M_AXIS_CONTROL2]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins M_AXIS_PASS2] [get_bd_intf_pins phase_controller/M_AXIS_PASS2]
  connect_bd_intf_net -intf_net S_AXIS_1 [get_bd_intf_pins S_AXIS] [get_bd_intf_pins phase_unwrap/S_AXIS]
  connect_bd_intf_net -intf_net cfg_to_axis_PhaseInc_M_AXIS [get_bd_intf_pins cfg_to_axis_PhaseInc/M_AXIS] [get_bd_intf_pins phase_controller/S_AXIS_reset]
  connect_bd_intf_net -intf_net phase_controller_M_AXIS_CONTROL [get_bd_intf_pins M_AXIS_CONTROL] [get_bd_intf_pins phase_controller/M_AXIS_CONTROL]
  connect_bd_intf_net -intf_net phase_controller_M_AXIS_PASS [get_bd_intf_pins M_AXIS_PASS] [get_bd_intf_pins phase_controller/M_AXIS_PASS]
  connect_bd_intf_net -intf_net phase_unwrap_0_M_AXIS [get_bd_intf_pins phase_controller/S_AXIS] [get_bd_intf_pins phase_unwrap/M_AXIS]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins cfg] [get_bd_pins cfg_select_phase_unwrapping/cfg] [get_bd_pins cfg_to_axis_PhaseInc/cfg] [get_bd_pins cfg_to_ph_ci/cfg] [get_bd_pins cfg_to_ph_cp/cfg] [get_bd_pins cfg_to_ph_lower/cfg] [get_bd_pins cfg_to_ph_setpoint/cfg] [get_bd_pins cfg_to_ph_upper/cfg]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_clk [get_bd_pins aclk] [get_bd_pins cfg_to_axis_PhaseInc/a_clk] [get_bd_pins cfg_to_ph_ci/a_clk] [get_bd_pins cfg_to_ph_cp/a_clk] [get_bd_pins cfg_to_ph_lower/a_clk] [get_bd_pins cfg_to_ph_setpoint/a_clk] [get_bd_pins cfg_to_ph_upper/a_clk] [get_bd_pins phase_controller/aclk] [get_bd_pins phase_unwrap/aclk]
  connect_bd_net -net cfg_select_phase_unwrapping_status [get_bd_pins cfg_select_phase_unwrapping/status] [get_bd_pins phase_unwrap/enable]
  connect_bd_net -net cfg_to_am_setpoint_data [get_bd_pins cfg_to_ph_setpoint/data] [get_bd_pins phase_controller/setpoint]
  connect_bd_net -net cfg_to_ph_ci_data [get_bd_pins cfg_to_ph_ci/data] [get_bd_pins phase_controller/ci]
  connect_bd_net -net cfg_to_ph_cp_data [get_bd_pins cfg_to_ph_cp/data] [get_bd_pins phase_controller/cp]
  connect_bd_net -net cfg_to_ph_lower_data [get_bd_pins cfg_to_ph_upper/data] [get_bd_pins phase_controller/limit_upper]
  connect_bd_net -net cfg_to_ph_upper_data [get_bd_pins data_lower] [get_bd_pins cfg_to_ph_lower/data] [get_bd_pins phase_controller/limit_lower]
  connect_bd_net -net enable_1 [get_bd_pins enable] [get_bd_pins phase_controller/enable]
  connect_bd_net -net phase_controller_mon_control [get_bd_pins mon_control] [get_bd_pins phase_controller/mon_control]
  connect_bd_net -net phase_controller_mon_control_B [get_bd_pins mon_control_B] [get_bd_pins phase_controller/mon_control_B]
  connect_bd_net -net phase_controller_mon_control_lower32 [get_bd_pins mon_control_lower32] [get_bd_pins phase_controller/mon_control_lower32]
  connect_bd_net -net phase_controller_mon_error [get_bd_pins mon_error] [get_bd_pins phase_controller/mon_error]
  connect_bd_net -net phase_controller_mon_signal [get_bd_pins mon_signal] [get_bd_pins phase_controller/mon_signal]
  connect_bd_net -net phase_controller_status_max [get_bd_pins status_max] [get_bd_pins phase_controller/status_max]
  connect_bd_net -net phase_controller_status_min [get_bd_pins status_min] [get_bd_pins phase_controller/status_min]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: PS_Amplitude_Controller
proc create_hier_cell_PS_Amplitude_Controller { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_PS_Amplitude_Controller() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_CONTROL

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_CONTROL2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_PASS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_PASS2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS


  # Create pins
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 1023 -to 0 cfg
  create_bd_pin -dir I enable
  create_bd_pin -dir O -from 31 -to 0 mon_control
  create_bd_pin -dir O -from 31 -to 0 mon_control_lower32
  create_bd_pin -dir O -from 31 -to 0 mon_signal
  create_bd_pin -dir O status_max
  create_bd_pin -dir O status_min

  # Create instance: amplitude_controller, and set properties
  set block_name controller_pi
  set block_cell_name amplitude_controller
  if { [catch {set amplitude_controller [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $amplitude_controller eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.AMCONTROL_ALLOW_NEG_SPECIAL {1} \
   CONFIG.AXIS_TDATA_WIDTH {24} \
   CONFIG.CONTROL2_W {32} \
   CONFIG.CONTROL_Q {15} \
   CONFIG.CONTROL_W {16} \
   CONFIG.IN_Q {23} \
   CONFIG.IN_W {24} \
   CONFIG.M_AXIS_CONTROL2_TDATA_WIDTH {32} \
   CONFIG.M_AXIS_CONTROL_TDATA_WIDTH {16} \
 ] $amplitude_controller

  # Create instance: cfg_to_am_ci, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_am_ci
  if { [catch {set cfg_to_am_ci [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_am_ci eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {22} \
 ] $cfg_to_am_ci

  # Create instance: cfg_to_am_cp, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_am_cp
  if { [catch {set cfg_to_am_cp [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_am_cp eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {21} \
 ] $cfg_to_am_cp

  # Create instance: cfg_to_am_lower, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_am_lower
  if { [catch {set cfg_to_am_lower [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_am_lower eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {16} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {25} \
 ] $cfg_to_am_lower

  # Create instance: cfg_to_am_setpoint, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_am_setpoint
  if { [catch {set cfg_to_am_setpoint [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_am_setpoint eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {24} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {20} \
 ] $cfg_to_am_setpoint

  # Create instance: cfg_to_am_upper, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_am_upper
  if { [catch {set cfg_to_am_upper [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_am_upper eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {16} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {23} \
 ] $cfg_to_am_upper

  # Create instance: cfg_to_axis_volume, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_axis_volume
  if { [catch {set cfg_to_axis_volume [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_axis_volume eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {16} \
   CONFIG.MAXIS_TDATA_WIDTH {16} \
   CONFIG.SRC_ADDR {2} \
 ] $cfg_to_axis_volume

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins M_AXIS_CONTROL2] [get_bd_intf_pins amplitude_controller/M_AXIS_CONTROL2]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins M_AXIS_PASS2] [get_bd_intf_pins amplitude_controller/M_AXIS_PASS2]
  connect_bd_intf_net -intf_net amplitude_controller_M_AXIS_CONTROL [get_bd_intf_pins M_AXIS_CONTROL] [get_bd_intf_pins amplitude_controller/M_AXIS_CONTROL]
  connect_bd_intf_net -intf_net amplitude_controller_M_AXIS_PASS [get_bd_intf_pins M_AXIS_PASS] [get_bd_intf_pins amplitude_controller/M_AXIS_PASS]
  connect_bd_intf_net -intf_net cfg_to_axis_volume_M_AXIS [get_bd_intf_pins amplitude_controller/S_AXIS_reset] [get_bd_intf_pins cfg_to_axis_volume/M_AXIS]
  connect_bd_intf_net -intf_net cordic_sqrt_M_AXIS_DOUT [get_bd_intf_pins S_AXIS] [get_bd_intf_pins amplitude_controller/S_AXIS]

  # Create port connections
  connect_bd_net -net PS_cfg_data [get_bd_pins cfg] [get_bd_pins cfg_to_am_ci/cfg] [get_bd_pins cfg_to_am_cp/cfg] [get_bd_pins cfg_to_am_lower/cfg] [get_bd_pins cfg_to_am_setpoint/cfg] [get_bd_pins cfg_to_am_upper/cfg] [get_bd_pins cfg_to_axis_volume/cfg]
  connect_bd_net -net amplitude_controller_mon_control [get_bd_pins mon_control] [get_bd_pins amplitude_controller/mon_control]
  connect_bd_net -net amplitude_controller_mon_control_lower32 [get_bd_pins mon_control_lower32] [get_bd_pins amplitude_controller/mon_control_lower32]
  connect_bd_net -net amplitude_controller_mon_signal [get_bd_pins mon_signal] [get_bd_pins amplitude_controller/mon_signal]
  connect_bd_net -net amplitude_controller_status_max [get_bd_pins status_max] [get_bd_pins amplitude_controller/status_max]
  connect_bd_net -net amplitude_controller_status_min [get_bd_pins status_min] [get_bd_pins amplitude_controller/status_min]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_clk [get_bd_pins aclk] [get_bd_pins amplitude_controller/aclk] [get_bd_pins cfg_to_am_ci/a_clk] [get_bd_pins cfg_to_am_cp/a_clk] [get_bd_pins cfg_to_am_lower/a_clk] [get_bd_pins cfg_to_am_setpoint/a_clk] [get_bd_pins cfg_to_am_upper/a_clk] [get_bd_pins cfg_to_axis_volume/a_clk]
  connect_bd_net -net cfg_to_am_ci_data [get_bd_pins amplitude_controller/ci] [get_bd_pins cfg_to_am_ci/data]
  connect_bd_net -net cfg_to_am_cp_data [get_bd_pins amplitude_controller/cp] [get_bd_pins cfg_to_am_cp/data]
  connect_bd_net -net cfg_to_am_lower_data [get_bd_pins amplitude_controller/limit_lower] [get_bd_pins cfg_to_am_lower/data]
  connect_bd_net -net cfg_to_am_setpoint_data [get_bd_pins amplitude_controller/setpoint] [get_bd_pins cfg_to_am_setpoint/data]
  connect_bd_net -net cfg_to_am_upper_data [get_bd_pins amplitude_controller/limit_upper] [get_bd_pins cfg_to_am_upper/data]
  connect_bd_net -net enable_1 [get_bd_pins enable] [get_bd_pins amplitude_controller/enable]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: PS
proc create_hier_cell_PS { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_PS() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:bram_rtl:1.0 BRAM_PORTA

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR

  create_bd_intf_pin -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M08_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M09_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M10_AXI


  # Create pins
  create_bd_pin -dir O -type clk FCLK_CLK0
  create_bd_pin -dir I SPI0_MISO_I
  create_bd_pin -dir O SPI0_MOSI_O
  create_bd_pin -dir I SPI0_SCLK_I
  create_bd_pin -dir O SPI0_SCLK_O
  create_bd_pin -dir O SPI0_SS_O
  create_bd_pin -dir O -from 1023 -to 0 cfg_data_reg_0
  create_bd_pin -dir O -from 1023 -to 0 cfg_data_reg_1
  create_bd_pin -dir I -from 31 -to 0 gpio_io_0_x1
  create_bd_pin -dir I -from 31 -to 0 gpio_io_0_x2
  create_bd_pin -dir I -from 31 -to 0 gpio_io_1_x3
  create_bd_pin -dir I -from 31 -to 0 gpio_io_1_x4
  create_bd_pin -dir I -from 31 -to 0 gpio_io_2_x5
  create_bd_pin -dir I -from 31 -to 0 gpio_io_2_x6
  create_bd_pin -dir I -from 31 -to 0 gpio_io_3_x7
  create_bd_pin -dir I -from 31 -to 0 gpio_io_3_x8
  create_bd_pin -dir I -from 31 -to 0 gpio_io_4_x9
  create_bd_pin -dir I -from 31 -to 0 gpio_io_4_x10
  create_bd_pin -dir I -from 31 -to 0 gpio_io_5_x11
  create_bd_pin -dir I -from 31 -to 0 gpio_io_5_x12
  create_bd_pin -dir I -from 31 -to 0 gpio_io_6_x13
  create_bd_pin -dir I -from 31 -to 0 gpio_io_6_x14
  create_bd_pin -dir I -from 31 -to 0 gpio_io_7_x15
  create_bd_pin -dir I -from 31 -to 0 gpio_io_7_x16
  create_bd_pin -dir O -from 0 -to 0 -type rst interconnect_aresetn1
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn1
  create_bd_pin -dir I -type clk slowest_sync_clk

  # Create instance: axi_bram_reader_0, and set properties
  set axi_bram_reader_0 [ create_bd_cell -type ip -vlnv anton-potocnik:user:axi_bram_reader:1.0 axi_bram_reader_0 ]
  set_property -dict [ list \
   CONFIG.BRAM_ADDR_WIDTH {14} \
   CONFIG.C_S00_AXI_ADDR_WIDTH {16} \
 ] $axi_bram_reader_0

  # Create instance: axi_cfg_register_0, and set properties
  set axi_cfg_register_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axi_cfg_register:1.0 axi_cfg_register_0 ]
  set_property -dict [ list \
   CONFIG.AXI_ADDR_WIDTH {8} \
   CONFIG.AXI_DATA_WIDTH {32} \
   CONFIG.CFG_DATA_WIDTH {2048} \
 ] $axi_cfg_register_0

  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_0

  # Create instance: axi_gpio_1, and set properties
  set axi_gpio_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_1 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_1

  # Create instance: axi_gpio_2, and set properties
  set axi_gpio_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_2 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_2

  # Create instance: axi_gpio_3, and set properties
  set axi_gpio_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_3 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_3

  # Create instance: axi_gpio_4, and set properties
  set axi_gpio_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_4 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_4

  # Create instance: axi_gpio_5, and set properties
  set axi_gpio_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_5 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_5

  # Create instance: axi_gpio_6, and set properties
  set axi_gpio_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_6 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_6

  # Create instance: axi_gpio_7, and set properties
  set axi_gpio_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_7 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_7

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {13} \
 ] $axi_interconnect_0

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: processing_system7_0, and set properties
  set processing_system7_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7_0 ]
  set_property -dict [ list \
   CONFIG.PCW_ACT_APU_PERIPHERAL_FREQMHZ {666.666687} \
   CONFIG.PCW_ACT_CAN0_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN1_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_DCI_PERIPHERAL_FREQMHZ {10.158730} \
   CONFIG.PCW_ACT_ENET0_PERIPHERAL_FREQMHZ {125.000000} \
   CONFIG.PCW_ACT_ENET1_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA0_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_FPGA1_PERIPHERAL_FREQMHZ {20.000000} \
   CONFIG.PCW_ACT_FPGA2_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA3_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_I2C_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_PCAP_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_QSPI_PERIPHERAL_FREQMHZ {125.000000} \
   CONFIG.PCW_ACT_SDIO_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_SMC_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_SPI_PERIPHERAL_FREQMHZ {166.666672} \
   CONFIG.PCW_ACT_TPIU_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_TTC0_CLK0_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC0_CLK1_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC0_CLK2_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC1_CLK0_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC1_CLK1_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC1_CLK2_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_ACT_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_UART_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_WDT_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_APU_CLK_RATIO_ENABLE {6:2:1} \
   CONFIG.PCW_APU_PERIPHERAL_FREQMHZ {666.666666} \
   CONFIG.PCW_ARMPLL_CTRL_FBDIV {40} \
   CONFIG.PCW_CAN0_BASEADDR {0xE0008000} \
   CONFIG.PCW_CAN0_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN0_HIGHADDR {0xE0008FFF} \
   CONFIG.PCW_CAN0_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN0_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN1_BASEADDR {0xE0009000} \
   CONFIG.PCW_CAN1_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN1_HIGHADDR {0xE0009FFF} \
   CONFIG.PCW_CAN1_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN1_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_CAN_PERIPHERAL_VALID {0} \
   CONFIG.PCW_CLK0_FREQ {100000000} \
   CONFIG.PCW_CLK1_FREQ {20000000} \
   CONFIG.PCW_CLK2_FREQ {10000000} \
   CONFIG.PCW_CLK3_FREQ {10000000} \
   CONFIG.PCW_CORE0_FIQ_INTR {0} \
   CONFIG.PCW_CORE0_IRQ_INTR {0} \
   CONFIG.PCW_CORE1_FIQ_INTR {0} \
   CONFIG.PCW_CORE1_IRQ_INTR {0} \
   CONFIG.PCW_CPU_CPU_6X4X_MAX_RANGE {667} \
   CONFIG.PCW_CPU_CPU_PLL_FREQMHZ {1333.333} \
   CONFIG.PCW_CPU_PERIPHERAL_CLKSRC {ARM PLL} \
   CONFIG.PCW_CPU_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_CRYSTAL_PERIPHERAL_FREQMHZ {33.333333} \
   CONFIG.PCW_DCI_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR0 {15} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR1 {7} \
   CONFIG.PCW_DCI_PERIPHERAL_FREQMHZ {10.159} \
   CONFIG.PCW_DDRPLL_CTRL_FBDIV {32} \
   CONFIG.PCW_DDR_DDR_PLL_FREQMHZ {1066.667} \
   CONFIG.PCW_DDR_HPRLPR_QUEUE_PARTITION {HPR(0)/LPR(32)} \
   CONFIG.PCW_DDR_HPR_TO_CRITICAL_PRIORITY_LEVEL {15} \
   CONFIG.PCW_DDR_LPR_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DDR_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DDR_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_DDR_PORT0_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT1_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT2_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT3_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_RAM_BASEADDR {0x00100000} \
   CONFIG.PCW_DDR_RAM_HIGHADDR {0x1FFFFFFF} \
   CONFIG.PCW_DDR_WRITE_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DM_WIDTH {4} \
   CONFIG.PCW_DQS_WIDTH {4} \
   CONFIG.PCW_DQ_WIDTH {32} \
   CONFIG.PCW_ENET0_BASEADDR {0xE000B000} \
   CONFIG.PCW_ENET0_ENET0_IO {MIO 16 .. 27} \
   CONFIG.PCW_ENET0_GRP_MDIO_ENABLE {1} \
   CONFIG.PCW_ENET0_GRP_MDIO_IO {EMIO} \
   CONFIG.PCW_ENET0_HIGHADDR {0xE000BFFF} \
   CONFIG.PCW_ENET0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR0 {8} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET0_RESET_ENABLE {0} \
   CONFIG.PCW_ENET1_BASEADDR {0xE000C000} \
   CONFIG.PCW_ENET1_GRP_MDIO_ENABLE {0} \
   CONFIG.PCW_ENET1_HIGHADDR {0xE000CFFF} \
   CONFIG.PCW_ENET1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_ENET1_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET1_RESET_ENABLE {0} \
   CONFIG.PCW_ENET_RESET_ENABLE {1} \
   CONFIG.PCW_ENET_RESET_POLARITY {Active Low} \
   CONFIG.PCW_ENET_RESET_SELECT {Share reset pin} \
   CONFIG.PCW_EN_4K_TIMER {0} \
   CONFIG.PCW_EN_CAN0 {0} \
   CONFIG.PCW_EN_CAN1 {0} \
   CONFIG.PCW_EN_CLK0_PORT {1} \
   CONFIG.PCW_EN_CLK1_PORT {1} \
   CONFIG.PCW_EN_CLK2_PORT {0} \
   CONFIG.PCW_EN_CLK3_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG0_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG1_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG2_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG3_PORT {0} \
   CONFIG.PCW_EN_DDR {1} \
   CONFIG.PCW_EN_EMIO_CAN0 {0} \
   CONFIG.PCW_EN_EMIO_CAN1 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_ENET0 {0} \
   CONFIG.PCW_EN_EMIO_ENET1 {0} \
   CONFIG.PCW_EN_EMIO_GPIO {0} \
   CONFIG.PCW_EN_EMIO_I2C0 {0} \
   CONFIG.PCW_EN_EMIO_I2C1 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART0 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART1 {0} \
   CONFIG.PCW_EN_EMIO_PJTAG {0} \
   CONFIG.PCW_EN_EMIO_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_SPI0 {1} \
   CONFIG.PCW_EN_EMIO_SPI1 {0} \
   CONFIG.PCW_EN_EMIO_SRAM_INT {0} \
   CONFIG.PCW_EN_EMIO_TRACE {0} \
   CONFIG.PCW_EN_EMIO_TTC0 {1} \
   CONFIG.PCW_EN_EMIO_TTC1 {0} \
   CONFIG.PCW_EN_EMIO_UART0 {0} \
   CONFIG.PCW_EN_EMIO_UART1 {0} \
   CONFIG.PCW_EN_EMIO_WDT {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO1 {0} \
   CONFIG.PCW_EN_ENET0 {1} \
   CONFIG.PCW_EN_ENET1 {0} \
   CONFIG.PCW_EN_GPIO {1} \
   CONFIG.PCW_EN_I2C0 {1} \
   CONFIG.PCW_EN_I2C1 {0} \
   CONFIG.PCW_EN_MODEM_UART0 {0} \
   CONFIG.PCW_EN_MODEM_UART1 {0} \
   CONFIG.PCW_EN_PJTAG {0} \
   CONFIG.PCW_EN_PTP_ENET0 {0} \
   CONFIG.PCW_EN_PTP_ENET1 {0} \
   CONFIG.PCW_EN_QSPI {1} \
   CONFIG.PCW_EN_RST0_PORT {1} \
   CONFIG.PCW_EN_RST1_PORT {0} \
   CONFIG.PCW_EN_RST2_PORT {0} \
   CONFIG.PCW_EN_RST3_PORT {0} \
   CONFIG.PCW_EN_SDIO0 {1} \
   CONFIG.PCW_EN_SDIO1 {0} \
   CONFIG.PCW_EN_SMC {0} \
   CONFIG.PCW_EN_SPI0 {1} \
   CONFIG.PCW_EN_SPI1 {1} \
   CONFIG.PCW_EN_TRACE {0} \
   CONFIG.PCW_EN_TTC0 {1} \
   CONFIG.PCW_EN_TTC1 {0} \
   CONFIG.PCW_EN_UART0 {1} \
   CONFIG.PCW_EN_UART1 {1} \
   CONFIG.PCW_EN_USB0 {1} \
   CONFIG.PCW_EN_USB1 {0} \
   CONFIG.PCW_EN_WDT {0} \
   CONFIG.PCW_FCLK0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR1 {2} \
   CONFIG.PCW_FCLK1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR0 {10} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR1 {5} \
   CONFIG.PCW_FCLK2_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK_CLK0_BUF {TRUE} \
   CONFIG.PCW_FCLK_CLK1_BUF {TRUE} \
   CONFIG.PCW_FCLK_CLK2_BUF {FALSE} \
   CONFIG.PCW_FCLK_CLK3_BUF {FALSE} \
   CONFIG.PCW_FPGA0_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_FPGA1_PERIPHERAL_FREQMHZ {20} \
   CONFIG.PCW_FPGA2_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_FPGA3_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_FPGA_FCLK0_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK1_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK2_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK3_ENABLE {0} \
   CONFIG.PCW_FTM_CTI_IN0 {<Select>} \
   CONFIG.PCW_FTM_CTI_IN1 {<Select>} \
   CONFIG.PCW_FTM_CTI_IN2 {<Select>} \
   CONFIG.PCW_FTM_CTI_IN3 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT0 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT1 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT2 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT3 {<Select>} \
   CONFIG.PCW_GP0_EN_MODIFIABLE_TXN {1} \
   CONFIG.PCW_GP0_NUM_READ_THREADS {4} \
   CONFIG.PCW_GP0_NUM_WRITE_THREADS {4} \
   CONFIG.PCW_GP1_EN_MODIFIABLE_TXN {1} \
   CONFIG.PCW_GP1_NUM_READ_THREADS {4} \
   CONFIG.PCW_GP1_NUM_WRITE_THREADS {4} \
   CONFIG.PCW_GPIO_BASEADDR {0xE000A000} \
   CONFIG.PCW_GPIO_EMIO_GPIO_ENABLE {0} \
   CONFIG.PCW_GPIO_EMIO_GPIO_WIDTH {64} \
   CONFIG.PCW_GPIO_HIGHADDR {0xE000AFFF} \
   CONFIG.PCW_GPIO_MIO_GPIO_ENABLE {1} \
   CONFIG.PCW_GPIO_MIO_GPIO_IO {MIO} \
   CONFIG.PCW_GPIO_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_I2C0_BASEADDR {0xE0004000} \
   CONFIG.PCW_I2C0_GRP_INT_ENABLE {0} \
   CONFIG.PCW_I2C0_HIGHADDR {0xE0004FFF} \
   CONFIG.PCW_I2C0_I2C0_IO {MIO 50 .. 51} \
   CONFIG.PCW_I2C0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_I2C0_RESET_ENABLE {0} \
   CONFIG.PCW_I2C1_BASEADDR {0xE0005000} \
   CONFIG.PCW_I2C1_GRP_INT_ENABLE {0} \
   CONFIG.PCW_I2C1_HIGHADDR {0xE0005FFF} \
   CONFIG.PCW_I2C1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_I2C1_RESET_ENABLE {0} \
   CONFIG.PCW_I2C_PERIPHERAL_FREQMHZ {111.111115} \
   CONFIG.PCW_I2C_RESET_ENABLE {1} \
   CONFIG.PCW_I2C_RESET_POLARITY {Active Low} \
   CONFIG.PCW_I2C_RESET_SELECT {Share reset pin} \
   CONFIG.PCW_IMPORT_BOARD_PRESET {cfg/red_pitaya.xml} \
   CONFIG.PCW_INCLUDE_ACP_TRANS_CHECK {0} \
   CONFIG.PCW_INCLUDE_TRACE_BUFFER {0} \
   CONFIG.PCW_IOPLL_CTRL_FBDIV {30} \
   CONFIG.PCW_IO_IO_PLL_FREQMHZ {1000.000} \
   CONFIG.PCW_IRQ_F2P_INTR {0} \
   CONFIG.PCW_IRQ_F2P_MODE {DIRECT} \
   CONFIG.PCW_MIO_0_DIRECTION {inout} \
   CONFIG.PCW_MIO_0_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_0_PULLUP {disabled} \
   CONFIG.PCW_MIO_0_SLEW {slow} \
   CONFIG.PCW_MIO_10_DIRECTION {inout} \
   CONFIG.PCW_MIO_10_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_10_PULLUP {enabled} \
   CONFIG.PCW_MIO_10_SLEW {slow} \
   CONFIG.PCW_MIO_11_DIRECTION {inout} \
   CONFIG.PCW_MIO_11_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_11_PULLUP {enabled} \
   CONFIG.PCW_MIO_11_SLEW {slow} \
   CONFIG.PCW_MIO_12_DIRECTION {inout} \
   CONFIG.PCW_MIO_12_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_12_PULLUP {enabled} \
   CONFIG.PCW_MIO_12_SLEW {slow} \
   CONFIG.PCW_MIO_13_DIRECTION {inout} \
   CONFIG.PCW_MIO_13_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_13_PULLUP {enabled} \
   CONFIG.PCW_MIO_13_SLEW {slow} \
   CONFIG.PCW_MIO_14_DIRECTION {in} \
   CONFIG.PCW_MIO_14_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_14_PULLUP {enabled} \
   CONFIG.PCW_MIO_14_SLEW {slow} \
   CONFIG.PCW_MIO_15_DIRECTION {out} \
   CONFIG.PCW_MIO_15_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_15_PULLUP {enabled} \
   CONFIG.PCW_MIO_15_SLEW {slow} \
   CONFIG.PCW_MIO_16_DIRECTION {out} \
   CONFIG.PCW_MIO_16_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_16_PULLUP {disabled} \
   CONFIG.PCW_MIO_16_SLEW {fast} \
   CONFIG.PCW_MIO_17_DIRECTION {out} \
   CONFIG.PCW_MIO_17_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_17_PULLUP {disabled} \
   CONFIG.PCW_MIO_17_SLEW {fast} \
   CONFIG.PCW_MIO_18_DIRECTION {out} \
   CONFIG.PCW_MIO_18_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_18_PULLUP {disabled} \
   CONFIG.PCW_MIO_18_SLEW {fast} \
   CONFIG.PCW_MIO_19_DIRECTION {out} \
   CONFIG.PCW_MIO_19_IOTYPE {out} \
   CONFIG.PCW_MIO_19_PULLUP {disabled} \
   CONFIG.PCW_MIO_19_SLEW {fast} \
   CONFIG.PCW_MIO_1_DIRECTION {out} \
   CONFIG.PCW_MIO_1_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_1_PULLUP {enabled} \
   CONFIG.PCW_MIO_1_SLEW {slow} \
   CONFIG.PCW_MIO_20_DIRECTION {out} \
   CONFIG.PCW_MIO_20_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_20_PULLUP {disabled} \
   CONFIG.PCW_MIO_20_SLEW {fast} \
   CONFIG.PCW_MIO_21_DIRECTION {out} \
   CONFIG.PCW_MIO_21_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_21_PULLUP {disabled} \
   CONFIG.PCW_MIO_21_SLEW {fast} \
   CONFIG.PCW_MIO_22_DIRECTION {in} \
   CONFIG.PCW_MIO_22_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_22_PULLUP {disabled} \
   CONFIG.PCW_MIO_22_SLEW {fast} \
   CONFIG.PCW_MIO_23_DIRECTION {in} \
   CONFIG.PCW_MIO_23_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_23_PULLUP {disabled} \
   CONFIG.PCW_MIO_23_SLEW {fast} \
   CONFIG.PCW_MIO_24_DIRECTION {in} \
   CONFIG.PCW_MIO_24_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_24_PULLUP {disabled} \
   CONFIG.PCW_MIO_24_SLEW {fast} \
   CONFIG.PCW_MIO_25_DIRECTION {in} \
   CONFIG.PCW_MIO_25_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_25_PULLUP {disabled} \
   CONFIG.PCW_MIO_25_SLEW {fast} \
   CONFIG.PCW_MIO_26_DIRECTION {in} \
   CONFIG.PCW_MIO_26_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_26_PULLUP {disabled} \
   CONFIG.PCW_MIO_26_SLEW {fast} \
   CONFIG.PCW_MIO_27_DIRECTION {in} \
   CONFIG.PCW_MIO_27_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_27_PULLUP {disabled} \
   CONFIG.PCW_MIO_27_SLEW {fast} \
   CONFIG.PCW_MIO_28_DIRECTION {inout} \
   CONFIG.PCW_MIO_28_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_28_PULLUP {enabled} \
   CONFIG.PCW_MIO_28_SLEW {fast} \
   CONFIG.PCW_MIO_29_DIRECTION {in} \
   CONFIG.PCW_MIO_29_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_29_PULLUP {enabled} \
   CONFIG.PCW_MIO_29_SLEW {fast} \
   CONFIG.PCW_MIO_2_DIRECTION {inout} \
   CONFIG.PCW_MIO_2_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_2_PULLUP {disabled} \
   CONFIG.PCW_MIO_2_SLEW {slow} \
   CONFIG.PCW_MIO_30_DIRECTION {out} \
   CONFIG.PCW_MIO_30_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_30_PULLUP {enabled} \
   CONFIG.PCW_MIO_30_SLEW {fast} \
   CONFIG.PCW_MIO_31_DIRECTION {in} \
   CONFIG.PCW_MIO_31_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_31_PULLUP {enabled} \
   CONFIG.PCW_MIO_31_SLEW {fast} \
   CONFIG.PCW_MIO_32_DIRECTION {inout} \
   CONFIG.PCW_MIO_32_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_32_PULLUP {enabled} \
   CONFIG.PCW_MIO_32_SLEW {fast} \
   CONFIG.PCW_MIO_33_DIRECTION {inout} \
   CONFIG.PCW_MIO_33_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_33_PULLUP {enabled} \
   CONFIG.PCW_MIO_33_SLEW {fast} \
   CONFIG.PCW_MIO_34_DIRECTION {inout} \
   CONFIG.PCW_MIO_34_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_34_PULLUP {enabled} \
   CONFIG.PCW_MIO_34_SLEW {fast} \
   CONFIG.PCW_MIO_35_DIRECTION {inout} \
   CONFIG.PCW_MIO_35_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_35_PULLUP {enabled} \
   CONFIG.PCW_MIO_35_SLEW {fast} \
   CONFIG.PCW_MIO_36_DIRECTION {in} \
   CONFIG.PCW_MIO_36_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_36_PULLUP {enabled} \
   CONFIG.PCW_MIO_36_SLEW {fast} \
   CONFIG.PCW_MIO_37_DIRECTION {inout} \
   CONFIG.PCW_MIO_37_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_37_PULLUP {enabled} \
   CONFIG.PCW_MIO_37_SLEW {fast} \
   CONFIG.PCW_MIO_38_DIRECTION {inout} \
   CONFIG.PCW_MIO_38_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_38_PULLUP {enabled} \
   CONFIG.PCW_MIO_38_SLEW {fast} \
   CONFIG.PCW_MIO_39_DIRECTION {inout} \
   CONFIG.PCW_MIO_39_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_39_PULLUP {enabled} \
   CONFIG.PCW_MIO_39_SLEW {fast} \
   CONFIG.PCW_MIO_3_DIRECTION {inout} \
   CONFIG.PCW_MIO_3_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_3_PULLUP {disabled} \
   CONFIG.PCW_MIO_3_SLEW {slow} \
   CONFIG.PCW_MIO_40_DIRECTION {inout} \
   CONFIG.PCW_MIO_40_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_40_PULLUP {enabled} \
   CONFIG.PCW_MIO_40_SLEW {slow} \
   CONFIG.PCW_MIO_41_DIRECTION {inout} \
   CONFIG.PCW_MIO_41_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_41_PULLUP {enabled} \
   CONFIG.PCW_MIO_41_SLEW {slow} \
   CONFIG.PCW_MIO_42_DIRECTION {inout} \
   CONFIG.PCW_MIO_42_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_42_PULLUP {enabled} \
   CONFIG.PCW_MIO_42_SLEW {slow} \
   CONFIG.PCW_MIO_43_DIRECTION {inout} \
   CONFIG.PCW_MIO_43_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_43_PULLUP {enabled} \
   CONFIG.PCW_MIO_43_SLEW {slow} \
   CONFIG.PCW_MIO_44_DIRECTION {inout} \
   CONFIG.PCW_MIO_44_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_44_PULLUP {enabled} \
   CONFIG.PCW_MIO_44_SLEW {slow} \
   CONFIG.PCW_MIO_45_DIRECTION {inout} \
   CONFIG.PCW_MIO_45_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_45_PULLUP {enabled} \
   CONFIG.PCW_MIO_45_SLEW {slow} \
   CONFIG.PCW_MIO_46_DIRECTION {in} \
   CONFIG.PCW_MIO_46_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_46_PULLUP {enabled} \
   CONFIG.PCW_MIO_46_SLEW {slow} \
   CONFIG.PCW_MIO_47_DIRECTION {in} \
   CONFIG.PCW_MIO_47_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_47_PULLUP {enabled} \
   CONFIG.PCW_MIO_47_SLEW {slow} \
   CONFIG.PCW_MIO_48_DIRECTION {out} \
   CONFIG.PCW_MIO_48_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_48_PULLUP {enabled} \
   CONFIG.PCW_MIO_48_SLEW {slow} \
   CONFIG.PCW_MIO_49_DIRECTION {inout} \
   CONFIG.PCW_MIO_49_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_49_PULLUP {enabled} \
   CONFIG.PCW_MIO_49_SLEW {slow} \
   CONFIG.PCW_MIO_4_DIRECTION {inout} \
   CONFIG.PCW_MIO_4_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_4_PULLUP {disabled} \
   CONFIG.PCW_MIO_4_SLEW {slow} \
   CONFIG.PCW_MIO_50_DIRECTION {inout} \
   CONFIG.PCW_MIO_50_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_50_PULLUP {enabled} \
   CONFIG.PCW_MIO_50_SLEW {slow} \
   CONFIG.PCW_MIO_51_DIRECTION {inout} \
   CONFIG.PCW_MIO_51_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_51_PULLUP {enabled} \
   CONFIG.PCW_MIO_51_SLEW {slow} \
   CONFIG.PCW_MIO_52_DIRECTION {inout} \
   CONFIG.PCW_MIO_52_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_52_PULLUP {enabled} \
   CONFIG.PCW_MIO_52_SLEW {slow} \
   CONFIG.PCW_MIO_53_DIRECTION {inout} \
   CONFIG.PCW_MIO_53_IOTYPE {LVCMOS 2.5V} \
   CONFIG.PCW_MIO_53_PULLUP {enabled} \
   CONFIG.PCW_MIO_53_SLEW {slow} \
   CONFIG.PCW_MIO_5_DIRECTION {inout} \
   CONFIG.PCW_MIO_5_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_5_PULLUP {disabled} \
   CONFIG.PCW_MIO_5_SLEW {slow} \
   CONFIG.PCW_MIO_6_DIRECTION {out} \
   CONFIG.PCW_MIO_6_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_6_PULLUP {disabled} \
   CONFIG.PCW_MIO_6_SLEW {slow} \
   CONFIG.PCW_MIO_7_DIRECTION {out} \
   CONFIG.PCW_MIO_7_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_7_PULLUP {disabled} \
   CONFIG.PCW_MIO_7_SLEW {slow} \
   CONFIG.PCW_MIO_8_DIRECTION {out} \
   CONFIG.PCW_MIO_8_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_8_PULLUP {disabled} \
   CONFIG.PCW_MIO_8_SLEW {slow} \
   CONFIG.PCW_MIO_9_DIRECTION {in} \
   CONFIG.PCW_MIO_9_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_9_PULLUP {enabled} \
   CONFIG.PCW_MIO_9_SLEW {slow} \
   CONFIG.PCW_MIO_PRIMITIVE {54} \
   CONFIG.PCW_MIO_TREE_PERIPHERALS {GPIO#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#GPIO#UART 1#UART 1#SPI 1#SPI 1#SPI 1#SPI 1#UART 0#UART 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#SD 0#SD 0#SD 0#SD 0#SD 0#SD 0#SD 0#SD 0#USB Reset#GPIO#I2C 0#I2C 0#GPIO#GPIO} \
   CONFIG.PCW_MIO_TREE_SIGNALS {gpio[0]#qspi0_ss_b#qspi0_io[0]#qspi0_io[1]#qspi0_io[2]#qspi0_io[3]/HOLD_B#qspi0_sclk#gpio[7]#tx#rx#mosi#miso#sclk#ss[0]#rx#tx#tx_clk#txd[0]#txd[1]#txd[2]#txd[3]#tx_ctl#rx_clk#rxd[0]#rxd[1]#rxd[2]#rxd[3]#rx_ctl#data[4]#dir#stp#nxt#data[0]#data[1]#data[2]#data[3]#clk#data[5]#data[6]#data[7]#clk#cmd#data[0]#data[1]#data[2]#data[3]#cd#wp#reset#gpio[49]#scl#sda#gpio[52]#gpio[53]} \
   CONFIG.PCW_M_AXI_GP0_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP0_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP0_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP0_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP1_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP1_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_NAND_CYCLES_T_AR {1} \
   CONFIG.PCW_NAND_CYCLES_T_CLR {1} \
   CONFIG.PCW_NAND_CYCLES_T_RC {11} \
   CONFIG.PCW_NAND_CYCLES_T_REA {1} \
   CONFIG.PCW_NAND_CYCLES_T_RR {1} \
   CONFIG.PCW_NAND_CYCLES_T_WC {11} \
   CONFIG.PCW_NAND_CYCLES_T_WP {1} \
   CONFIG.PCW_NAND_GRP_D8_ENABLE {0} \
   CONFIG.PCW_NAND_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_CS0_T_PC {1} \
   CONFIG.PCW_NOR_CS0_T_RC {11} \
   CONFIG.PCW_NOR_CS0_T_TR {1} \
   CONFIG.PCW_NOR_CS0_T_WC {11} \
   CONFIG.PCW_NOR_CS0_T_WP {1} \
   CONFIG.PCW_NOR_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_CS1_T_PC {1} \
   CONFIG.PCW_NOR_CS1_T_RC {11} \
   CONFIG.PCW_NOR_CS1_T_TR {1} \
   CONFIG.PCW_NOR_CS1_T_WC {11} \
   CONFIG.PCW_NOR_CS1_T_WP {1} \
   CONFIG.PCW_NOR_CS1_WE_TIME {0} \
   CONFIG.PCW_NOR_GRP_A25_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_INT_ENABLE {0} \
   CONFIG.PCW_NOR_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_SRAM_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_SRAM_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS1_WE_TIME {0} \
   CONFIG.PCW_OVERRIDE_BASIC_CLOCK {0} \
   CONFIG.PCW_P2F_CAN0_INTR {0} \
   CONFIG.PCW_P2F_CAN1_INTR {0} \
   CONFIG.PCW_P2F_CTI_INTR {0} \
   CONFIG.PCW_P2F_DMAC0_INTR {0} \
   CONFIG.PCW_P2F_DMAC1_INTR {0} \
   CONFIG.PCW_P2F_DMAC2_INTR {0} \
   CONFIG.PCW_P2F_DMAC3_INTR {0} \
   CONFIG.PCW_P2F_DMAC4_INTR {0} \
   CONFIG.PCW_P2F_DMAC5_INTR {0} \
   CONFIG.PCW_P2F_DMAC6_INTR {0} \
   CONFIG.PCW_P2F_DMAC7_INTR {0} \
   CONFIG.PCW_P2F_DMAC_ABORT_INTR {0} \
   CONFIG.PCW_P2F_ENET0_INTR {0} \
   CONFIG.PCW_P2F_ENET1_INTR {0} \
   CONFIG.PCW_P2F_GPIO_INTR {0} \
   CONFIG.PCW_P2F_I2C0_INTR {0} \
   CONFIG.PCW_P2F_I2C1_INTR {0} \
   CONFIG.PCW_P2F_QSPI_INTR {0} \
   CONFIG.PCW_P2F_SDIO0_INTR {0} \
   CONFIG.PCW_P2F_SDIO1_INTR {0} \
   CONFIG.PCW_P2F_SMC_INTR {0} \
   CONFIG.PCW_P2F_SPI0_INTR {0} \
   CONFIG.PCW_P2F_SPI1_INTR {0} \
   CONFIG.PCW_P2F_UART0_INTR {0} \
   CONFIG.PCW_P2F_UART1_INTR {0} \
   CONFIG.PCW_P2F_USB0_INTR {0} \
   CONFIG.PCW_P2F_USB1_INTR {0} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY0 {0.080} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY1 {0.063} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY2 {0.057} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY3 {0.068} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_0 {-0.047} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_1 {-0.025} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_2 {-0.006} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_3 {-0.017} \
   CONFIG.PCW_PACKAGE_NAME {clg400} \
   CONFIG.PCW_PCAP_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_PCAP_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_PCAP_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_PERIPHERAL_BOARD_PRESET {None} \
   CONFIG.PCW_PJTAG_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_PLL_BYPASSMODE_ENABLE {0} \
   CONFIG.PCW_PRESET_BANK0_VOLTAGE {LVCMOS 3.3V} \
   CONFIG.PCW_PRESET_BANK1_VOLTAGE {LVCMOS 2.5V} \
   CONFIG.PCW_PS7_SI_REV {PRODUCTION} \
   CONFIG.PCW_QSPI_GRP_FBCLK_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_IO1_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_ENABLE {1} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_IO {MIO 1 .. 6} \
   CONFIG.PCW_QSPI_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_QSPI_INTERNAL_HIGHADDRESS {0xFCFFFFFF} \
   CONFIG.PCW_QSPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_QSPI_PERIPHERAL_DIVISOR0 {8} \
   CONFIG.PCW_QSPI_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_QSPI_PERIPHERAL_FREQMHZ {125} \
   CONFIG.PCW_QSPI_QSPI_IO {MIO 1 .. 6} \
   CONFIG.PCW_SD0_GRP_CD_ENABLE {1} \
   CONFIG.PCW_SD0_GRP_CD_IO {MIO 46} \
   CONFIG.PCW_SD0_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD0_GRP_WP_ENABLE {1} \
   CONFIG.PCW_SD0_GRP_WP_IO {MIO 47} \
   CONFIG.PCW_SD0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_SD0_SD0_IO {MIO 40 .. 45} \
   CONFIG.PCW_SD1_GRP_CD_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_WP_ENABLE {0} \
   CONFIG.PCW_SD1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SDIO0_BASEADDR {0xE0100000} \
   CONFIG.PCW_SDIO0_HIGHADDR {0xE0100FFF} \
   CONFIG.PCW_SDIO1_BASEADDR {0xE0101000} \
   CONFIG.PCW_SDIO1_HIGHADDR {0xE0101FFF} \
   CONFIG.PCW_SDIO_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SDIO_PERIPHERAL_DIVISOR0 {10} \
   CONFIG.PCW_SDIO_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_SDIO_PERIPHERAL_VALID {1} \
   CONFIG.PCW_SINGLE_QSPI_DATA_MODE {x4} \
   CONFIG.PCW_SMC_CYCLE_T0 {NA} \
   CONFIG.PCW_SMC_CYCLE_T1 {NA} \
   CONFIG.PCW_SMC_CYCLE_T2 {NA} \
   CONFIG.PCW_SMC_CYCLE_T3 {NA} \
   CONFIG.PCW_SMC_CYCLE_T4 {NA} \
   CONFIG.PCW_SMC_CYCLE_T5 {NA} \
   CONFIG.PCW_SMC_CYCLE_T6 {NA} \
   CONFIG.PCW_SMC_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SMC_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_SMC_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_SMC_PERIPHERAL_VALID {0} \
   CONFIG.PCW_SPI0_BASEADDR {0xE0006000} \
   CONFIG.PCW_SPI0_GRP_SS0_ENABLE {1} \
   CONFIG.PCW_SPI0_GRP_SS0_IO {EMIO} \
   CONFIG.PCW_SPI0_GRP_SS1_ENABLE {1} \
   CONFIG.PCW_SPI0_GRP_SS1_IO {EMIO} \
   CONFIG.PCW_SPI0_GRP_SS2_ENABLE {1} \
   CONFIG.PCW_SPI0_GRP_SS2_IO {EMIO} \
   CONFIG.PCW_SPI0_HIGHADDR {0xE0006FFF} \
   CONFIG.PCW_SPI0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_SPI0_SPI0_IO {EMIO} \
   CONFIG.PCW_SPI1_BASEADDR {0xE0007000} \
   CONFIG.PCW_SPI1_GRP_SS0_ENABLE {1} \
   CONFIG.PCW_SPI1_GRP_SS0_IO {MIO 13} \
   CONFIG.PCW_SPI1_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS1_IO {<Select>} \
   CONFIG.PCW_SPI1_GRP_SS2_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS2_IO {<Select>} \
   CONFIG.PCW_SPI1_HIGHADDR {0xE0007FFF} \
   CONFIG.PCW_SPI1_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_SPI1_SPI1_IO {MIO 10 .. 15} \
   CONFIG.PCW_SPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SPI_PERIPHERAL_DIVISOR0 {6} \
   CONFIG.PCW_SPI_PERIPHERAL_FREQMHZ {166.666666} \
   CONFIG.PCW_SPI_PERIPHERAL_VALID {1} \
   CONFIG.PCW_S_AXI_ACP_ARUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_AWUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_ID_WIDTH {3} \
   CONFIG.PCW_S_AXI_GP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_GP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP0_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP1_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP2_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP2_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP3_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP3_ID_WIDTH {6} \
   CONFIG.PCW_TPIU_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_TPIU_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TPIU_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_TRACE_BUFFER_CLOCK_DELAY {12} \
   CONFIG.PCW_TRACE_BUFFER_FIFO_SIZE {128} \
   CONFIG.PCW_TRACE_GRP_16BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_2BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_32BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_4BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_8BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_INTERNAL_WIDTH {2} \
   CONFIG.PCW_TRACE_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TRACE_PIPELINE_WIDTH {8} \
   CONFIG.PCW_TTC0_BASEADDR {0xE0104000} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_HIGHADDR {0xE0104fff} \
   CONFIG.PCW_TTC0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_TTC0_TTC0_IO {EMIO} \
   CONFIG.PCW_TTC1_BASEADDR {0xE0105000} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_HIGHADDR {0xE0105fff} \
   CONFIG.PCW_TTC1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_UART0_BASEADDR {0xE0000000} \
   CONFIG.PCW_UART0_BAUD_RATE {115200} \
   CONFIG.PCW_UART0_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART0_HIGHADDR {0xE0000FFF} \
   CONFIG.PCW_UART0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_UART0_UART0_IO {MIO 14 .. 15} \
   CONFIG.PCW_UART1_BASEADDR {0xE0001000} \
   CONFIG.PCW_UART1_BAUD_RATE {115200} \
   CONFIG.PCW_UART1_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART1_HIGHADDR {0xE0001FFF} \
   CONFIG.PCW_UART1_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_UART1_UART1_IO {MIO 8 .. 9} \
   CONFIG.PCW_UART_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_UART_PERIPHERAL_DIVISOR0 {10} \
   CONFIG.PCW_UART_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_UART_PERIPHERAL_VALID {1} \
   CONFIG.PCW_UIPARAM_ACT_DDR_FREQ_MHZ {533.333374} \
   CONFIG.PCW_UIPARAM_DDR_ADV_ENABLE {0} \
   CONFIG.PCW_UIPARAM_DDR_AL {0} \
   CONFIG.PCW_UIPARAM_DDR_BANK_ADDR_COUNT {3} \
   CONFIG.PCW_UIPARAM_DDR_BL {8} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY0 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY1 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY2 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY3 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BUS_WIDTH {16 Bit} \
   CONFIG.PCW_UIPARAM_DDR_CL {7} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PACKAGE_LENGTH {54.563} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PACKAGE_LENGTH {54.563} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PACKAGE_LENGTH {54.563} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PACKAGE_LENGTH {54.563} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_STOP_EN {0} \
   CONFIG.PCW_UIPARAM_DDR_COL_ADDR_COUNT {10} \
   CONFIG.PCW_UIPARAM_DDR_CWL {6} \
   CONFIG.PCW_UIPARAM_DDR_DEVICE_CAPACITY {4096 MBits} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PACKAGE_LENGTH {101.239} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PACKAGE_LENGTH {79.5025} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PACKAGE_LENGTH {60.536} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PACKAGE_LENGTH {71.7715} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_0 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_1 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_2 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_3 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PACKAGE_LENGTH {104.5365} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PACKAGE_LENGTH {70.676} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PACKAGE_LENGTH {59.1615} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PACKAGE_LENGTH {81.319} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DRAM_WIDTH {16 Bits} \
   CONFIG.PCW_UIPARAM_DDR_ECC {Disabled} \
   CONFIG.PCW_UIPARAM_DDR_ENABLE {1} \
   CONFIG.PCW_UIPARAM_DDR_FREQ_MHZ {533.333333} \
   CONFIG.PCW_UIPARAM_DDR_HIGH_TEMP {Normal (0-85)} \
   CONFIG.PCW_UIPARAM_DDR_MEMORY_TYPE {DDR 3} \
   CONFIG.PCW_UIPARAM_DDR_PARTNO {MT41J256M16 RE-125} \
   CONFIG.PCW_UIPARAM_DDR_ROW_ADDR_COUNT {15} \
   CONFIG.PCW_UIPARAM_DDR_SPEED_BIN {DDR3_1066F} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_DATA_EYE {1} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_READ_GATE {1} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_WRITE_LEVEL {1} \
   CONFIG.PCW_UIPARAM_DDR_T_FAW {40.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RAS_MIN {35.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RC {48.91} \
   CONFIG.PCW_UIPARAM_DDR_T_RCD {7} \
   CONFIG.PCW_UIPARAM_DDR_T_RP {7} \
   CONFIG.PCW_UIPARAM_DDR_USE_INTERNAL_VREF {0} \
   CONFIG.PCW_UIPARAM_GENERATE_SUMMARY {NA} \
   CONFIG.PCW_USB0_BASEADDR {0xE0102000} \
   CONFIG.PCW_USB0_HIGHADDR {0xE0102fff} \
   CONFIG.PCW_USB0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB0_RESET_ENABLE {1} \
   CONFIG.PCW_USB0_RESET_IO {MIO 48} \
   CONFIG.PCW_USB0_USB0_IO {MIO 28 .. 39} \
   CONFIG.PCW_USB1_BASEADDR {0xE0103000} \
   CONFIG.PCW_USB1_HIGHADDR {0xE0103fff} \
   CONFIG.PCW_USB1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB1_RESET_ENABLE {0} \
   CONFIG.PCW_USB_RESET_ENABLE {1} \
   CONFIG.PCW_USB_RESET_POLARITY {Active Low} \
   CONFIG.PCW_USB_RESET_SELECT {Share reset pin} \
   CONFIG.PCW_USE_AXI_FABRIC_IDLE {0} \
   CONFIG.PCW_USE_AXI_NONSECURE {0} \
   CONFIG.PCW_USE_CORESIGHT {0} \
   CONFIG.PCW_USE_CROSS_TRIGGER {0} \
   CONFIG.PCW_USE_CR_FABRIC {1} \
   CONFIG.PCW_USE_DDR_BYPASS {0} \
   CONFIG.PCW_USE_DEBUG {0} \
   CONFIG.PCW_USE_DEFAULT_ACP_USER_VAL {0} \
   CONFIG.PCW_USE_DMA0 {0} \
   CONFIG.PCW_USE_DMA1 {0} \
   CONFIG.PCW_USE_DMA2 {0} \
   CONFIG.PCW_USE_DMA3 {0} \
   CONFIG.PCW_USE_EXPANDED_IOP {0} \
   CONFIG.PCW_USE_EXPANDED_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_FABRIC_INTERRUPT {0} \
   CONFIG.PCW_USE_HIGH_OCM {0} \
   CONFIG.PCW_USE_M_AXI_GP0 {1} \
   CONFIG.PCW_USE_M_AXI_GP1 {0} \
   CONFIG.PCW_USE_PROC_EVENT_BUS {0} \
   CONFIG.PCW_USE_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_S_AXI_ACP {1} \
   CONFIG.PCW_USE_S_AXI_GP0 {0} \
   CONFIG.PCW_USE_S_AXI_GP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP0 {0} \
   CONFIG.PCW_USE_S_AXI_HP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP2 {0} \
   CONFIG.PCW_USE_S_AXI_HP3 {0} \
   CONFIG.PCW_USE_TRACE {0} \
   CONFIG.PCW_USE_TRACE_DATA_EDGE_DETECTOR {0} \
   CONFIG.PCW_VALUE_SILVERSION {3} \
   CONFIG.PCW_WDT_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_WDT_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_WDT_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_WDT_PERIPHERAL_FREQMHZ {133.333333} \
 ] $processing_system7_0

  # Create instance: rst_ps7_0_125M, and set properties
  set rst_ps7_0_125M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps7_0_125M ]

  # Create instance: xlslice_cfg_reg0, and set properties
  set xlslice_cfg_reg0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_cfg_reg0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1023} \
   CONFIG.DIN_WIDTH {2048} \
   CONFIG.DOUT_WIDTH {1024} \
 ] $xlslice_cfg_reg0

  # Create instance: xlslice_cfg_reg1, and set properties
  set xlslice_cfg_reg1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_cfg_reg1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2047} \
   CONFIG.DIN_TO {1024} \
   CONFIG.DIN_WIDTH {2048} \
   CONFIG.DOUT_WIDTH {1024} \
 ] $xlslice_cfg_reg1

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins M08_AXI] [get_bd_intf_pins axi_interconnect_0/M08_AXI]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins M09_AXI] [get_bd_intf_pins axi_interconnect_0/M09_AXI]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins M10_AXI] [get_bd_intf_pins axi_interconnect_0/M10_AXI]
  connect_bd_intf_net -intf_net axi_bram_reader_0_BRAM_PORTA [get_bd_intf_pins BRAM_PORTA] [get_bd_intf_pins axi_bram_reader_0/BRAM_PORTA]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_cfg_register_0/S_AXI] [get_bd_intf_pins axi_interconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_gpio_0/S_AXI] [get_bd_intf_pins axi_interconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_gpio_1/S_AXI] [get_bd_intf_pins axi_interconnect_0/M02_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_gpio_2/S_AXI] [get_bd_intf_pins axi_interconnect_0/M03_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins axi_gpio_3/S_AXI] [get_bd_intf_pins axi_interconnect_0/M04_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M05_AXI [get_bd_intf_pins axi_gpio_4/S_AXI] [get_bd_intf_pins axi_interconnect_0/M05_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M06_AXI [get_bd_intf_pins axi_bram_reader_0/S_AXI] [get_bd_intf_pins axi_interconnect_0/M06_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M07_AXI [get_bd_intf_pins axi_gpio_5/S_AXI] [get_bd_intf_pins axi_interconnect_0/M07_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M11_AXI [get_bd_intf_pins axi_gpio_7/S_AXI] [get_bd_intf_pins axi_interconnect_0/M11_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M12_AXI [get_bd_intf_pins axi_gpio_6/S_AXI] [get_bd_intf_pins axi_interconnect_0/M12_AXI]
  connect_bd_intf_net -intf_net processing_system7_0_DDR [get_bd_intf_pins DDR] [get_bd_intf_pins processing_system7_0/DDR]
  connect_bd_intf_net -intf_net processing_system7_0_FIXED_IO [get_bd_intf_pins FIXED_IO] [get_bd_intf_pins processing_system7_0/FIXED_IO]
  connect_bd_intf_net -intf_net processing_system7_0_M_AXI_GP0 [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins processing_system7_0/M_AXI_GP0]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins FCLK_CLK0] [get_bd_pins axi_bram_reader_0/s00_axi_aclk] [get_bd_pins axi_cfg_register_0/aclk] [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins axi_gpio_1/s_axi_aclk] [get_bd_pins axi_gpio_2/s_axi_aclk] [get_bd_pins axi_gpio_3/s_axi_aclk] [get_bd_pins axi_gpio_4/s_axi_aclk] [get_bd_pins axi_gpio_5/s_axi_aclk] [get_bd_pins axi_gpio_6/s_axi_aclk] [get_bd_pins axi_gpio_7/s_axi_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/M05_ACLK] [get_bd_pins axi_interconnect_0/M06_ACLK] [get_bd_pins axi_interconnect_0/M07_ACLK] [get_bd_pins axi_interconnect_0/M08_ACLK] [get_bd_pins axi_interconnect_0/M09_ACLK] [get_bd_pins axi_interconnect_0/M10_ACLK] [get_bd_pins axi_interconnect_0/M11_ACLK] [get_bd_pins axi_interconnect_0/M12_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins processing_system7_0/FCLK_CLK0] [get_bd_pins processing_system7_0/M_AXI_GP0_ACLK] [get_bd_pins processing_system7_0/S_AXI_ACP_ACLK] [get_bd_pins rst_ps7_0_125M/slowest_sync_clk]
  connect_bd_net -net SPI0_MISO_I_1 [get_bd_pins SPI0_MISO_I] [get_bd_pins processing_system7_0/SPI0_MISO_I]
  connect_bd_net -net SPI0_SCLK_I_1 [get_bd_pins SPI0_SCLK_I] [get_bd_pins processing_system7_0/SPI0_SCLK_I]
  connect_bd_net -net axi_cfg_register_0_cfg_data [get_bd_pins axi_cfg_register_0/cfg_data] [get_bd_pins xlslice_cfg_reg0/Din] [get_bd_pins xlslice_cfg_reg1/Din]
  connect_bd_net -net gpio2_io_i1_1 [get_bd_pins gpio_io_1_x4] [get_bd_pins axi_gpio_1/gpio2_io_i]
  connect_bd_net -net gpio2_io_i3_1 [get_bd_pins gpio_io_3_x8] [get_bd_pins axi_gpio_3/gpio2_io_i]
  connect_bd_net -net gpio2_io_i4_1 [get_bd_pins gpio_io_2_x6] [get_bd_pins axi_gpio_2/gpio2_io_i]
  connect_bd_net -net gpio2_io_i_1 [get_bd_pins gpio_io_0_x2] [get_bd_pins axi_gpio_0/gpio2_io_i]
  connect_bd_net -net gpio2_io_i_2 [get_bd_pins gpio_io_4_x10] [get_bd_pins axi_gpio_4/gpio2_io_i]
  connect_bd_net -net gpio2_io_i_3 [get_bd_pins gpio_io_5_x12] [get_bd_pins axi_gpio_5/gpio2_io_i]
  connect_bd_net -net gpio2_io_i_4 [get_bd_pins gpio_io_6_x14] [get_bd_pins axi_gpio_6/gpio2_io_i]
  connect_bd_net -net gpio2_io_i_5 [get_bd_pins gpio_io_7_x16] [get_bd_pins axi_gpio_7/gpio2_io_i]
  connect_bd_net -net gpio_io_i1_1 [get_bd_pins gpio_io_1_x3] [get_bd_pins axi_gpio_1/gpio_io_i]
  connect_bd_net -net gpio_io_i3_1 [get_bd_pins gpio_io_3_x7] [get_bd_pins axi_gpio_3/gpio_io_i]
  connect_bd_net -net gpio_io_i4_1 [get_bd_pins gpio_io_2_x5] [get_bd_pins axi_gpio_2/gpio_io_i]
  connect_bd_net -net gpio_io_i_1 [get_bd_pins gpio_io_0_x1] [get_bd_pins axi_gpio_0/gpio_io_i]
  connect_bd_net -net gpio_io_i_2 [get_bd_pins gpio_io_4_x9] [get_bd_pins axi_gpio_4/gpio_io_i]
  connect_bd_net -net gpio_io_i_3 [get_bd_pins gpio_io_5_x11] [get_bd_pins axi_gpio_5/gpio_io_i]
  connect_bd_net -net gpio_io_i_4 [get_bd_pins gpio_io_6_x13] [get_bd_pins axi_gpio_6/gpio_io_i]
  connect_bd_net -net gpio_io_i_5 [get_bd_pins gpio_io_7_x15] [get_bd_pins axi_gpio_7/gpio_io_i]
  connect_bd_net -net proc_sys_reset_0_interconnect_aresetn [get_bd_pins interconnect_aresetn1] [get_bd_pins proc_sys_reset_0/interconnect_aresetn]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_pins peripheral_aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn]
  connect_bd_net -net processing_system7_0_FCLK_RESET0_N [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins processing_system7_0/FCLK_RESET0_N] [get_bd_pins rst_ps7_0_125M/ext_reset_in]
  connect_bd_net -net processing_system7_0_SPI0_MOSI_O [get_bd_pins SPI0_MOSI_O] [get_bd_pins processing_system7_0/SPI0_MOSI_O]
  connect_bd_net -net processing_system7_0_SPI0_SCLK_O [get_bd_pins SPI0_SCLK_O] [get_bd_pins processing_system7_0/SPI0_SCLK_O]
  connect_bd_net -net processing_system7_0_SPI0_SS_O [get_bd_pins SPI0_SS_O] [get_bd_pins processing_system7_0/SPI0_SS_O]
  connect_bd_net -net rst_ps7_0_125M_interconnect_aresetn [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins rst_ps7_0_125M/interconnect_aresetn]
  connect_bd_net -net rst_ps7_0_125M_peripheral_aresetn [get_bd_pins peripheral_aresetn1] [get_bd_pins axi_bram_reader_0/s00_axi_aresetn] [get_bd_pins axi_cfg_register_0/aresetn] [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins axi_gpio_1/s_axi_aresetn] [get_bd_pins axi_gpio_2/s_axi_aresetn] [get_bd_pins axi_gpio_3/s_axi_aresetn] [get_bd_pins axi_gpio_4/s_axi_aresetn] [get_bd_pins axi_gpio_5/s_axi_aresetn] [get_bd_pins axi_gpio_6/s_axi_aresetn] [get_bd_pins axi_gpio_7/s_axi_aresetn] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/M05_ARESETN] [get_bd_pins axi_interconnect_0/M06_ARESETN] [get_bd_pins axi_interconnect_0/M07_ARESETN] [get_bd_pins axi_interconnect_0/M08_ARESETN] [get_bd_pins axi_interconnect_0/M09_ARESETN] [get_bd_pins axi_interconnect_0/M10_ARESETN] [get_bd_pins axi_interconnect_0/M11_ARESETN] [get_bd_pins axi_interconnect_0/M12_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins rst_ps7_0_125M/peripheral_aresetn]
  connect_bd_net -net slowest_sync_clk_1 [get_bd_pins slowest_sync_clk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk]
  connect_bd_net -net xlslice_cfg_reg0_Dout [get_bd_pins cfg_data_reg_0] [get_bd_pins xlslice_cfg_reg0/Dout]
  connect_bd_net -net xlslice_cfg_reg1_Dout [get_bd_pins cfg_data_reg_1] [get_bd_pins xlslice_cfg_reg1/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR ]

  set FIXED_IO [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO ]

  set Vaux0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux0 ]

  set Vaux1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux1 ]

  set Vaux8 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux8 ]

  set Vaux9 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux9 ]

  set Vp_Vn [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vp_Vn ]

  set gpio_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 gpio_rtl_0 ]

  set spi_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 spi_rtl_0 ]


  # Create ports
  set adc_clk_n_i [ create_bd_port -dir I adc_clk_n_i ]
  set adc_clk_p_i [ create_bd_port -dir I adc_clk_p_i ]
  set adc_csn_o [ create_bd_port -dir O adc_csn_o ]
  set adc_dat_a_i [ create_bd_port -dir I -from 13 -to 0 adc_dat_a_i ]
  set adc_dat_b_i [ create_bd_port -dir I -from 13 -to 0 adc_dat_b_i ]
  set adc_enc_n_o [ create_bd_port -dir O adc_enc_n_o ]
  set adc_enc_p_o [ create_bd_port -dir O adc_enc_p_o ]
  set dac_clk_o [ create_bd_port -dir O dac_clk_o ]
  set dac_dat_o [ create_bd_port -dir O -from 13 -to 0 dac_dat_o ]
  set dac_pwm_o [ create_bd_port -dir O -from 3 -to 0 dac_pwm_o ]
  set dac_rst_o [ create_bd_port -dir O dac_rst_o ]
  set dac_sel_o [ create_bd_port -dir O dac_sel_o ]
  set dac_wrt_o [ create_bd_port -dir O dac_wrt_o ]
  set daisy_n_i [ create_bd_port -dir I -from 1 -to 0 daisy_n_i ]
  set daisy_n_o [ create_bd_port -dir O -from 1 -to 0 daisy_n_o ]
  set daisy_p_i [ create_bd_port -dir I -from 1 -to 0 daisy_p_i ]
  set daisy_p_o [ create_bd_port -dir O -from 1 -to 0 daisy_p_o ]
  set exp_n_io [ create_bd_port -dir IO -from 7 -to 0 exp_n_io ]
  set exp_p_io [ create_bd_port -dir IO -from 7 -to 0 exp_p_io ]
  set led_o [ create_bd_port -dir O -from 7 -to 0 led_o ]
  set reset_rtl_0 [ create_bd_port -dir I -type rst reset_rtl_0 ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $reset_rtl_0

  # Create instance: PS
  create_hier_cell_PS [current_bd_instance .] PS

  # Create instance: PS_Amplitude_Controller
  create_hier_cell_PS_Amplitude_Controller [current_bd_instance .] PS_Amplitude_Controller

  # Create instance: PS_Phase_Controller
  create_hier_cell_PS_Phase_Controller [current_bd_instance .] PS_Phase_Controller

  # Create instance: PS_data_transport
  create_hier_cell_PS_data_transport [current_bd_instance .] PS_data_transport

  # Create instance: VolumeAdjuster16_14_and_QCtrl, and set properties
  set block_name VolumeAdjuster16_14
  set block_cell_name VolumeAdjuster16_14_and_QCtrl
  if { [catch {set VolumeAdjuster16_14_and_QCtrl [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $VolumeAdjuster16_14_and_QCtrl eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_dc_filter_0, and set properties
  set block_name axis_dc_filter
  set block_cell_name axis_dc_filter_0
  if { [catch {set axis_dc_filter_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_dc_filter_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_decimator_0, and set properties
  set block_name axis_decimator
  set block_cell_name axis_decimator_0
  if { [catch {set axis_decimator_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_decimator_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_red_pitaya_adc_0, and set properties
  set axis_red_pitaya_adc_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_red_pitaya_adc:1.0 axis_red_pitaya_adc_0 ]

  # Create instance: axis_red_pitaya_dac_0, and set properties
  set axis_red_pitaya_dac_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_red_pitaya_dac:1.0 axis_red_pitaya_dac_0 ]

  # Create instance: axis_sc26_to_14_0, and set properties
  set block_name axis_sc28_to_14
  set block_cell_name axis_sc26_to_14_0
  if { [catch {set axis_sc26_to_14_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_sc26_to_14_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.SRC_BITS {25} \
 ] $axis_sc26_to_14_0

  # Create instance: cfg_select_amplitude_control, and set properties
  set block_name cfg_select
  set block_cell_name cfg_select_amplitude_control
  if { [catch {set cfg_select_amplitude_control [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_select_amplitude_control eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_SWBIT {1} \
   CONFIG.SRC_ADDR {3} \
 ] $cfg_select_amplitude_control

  # Create instance: cfg_select_lck_ampl_control, and set properties
  set block_name cfg_select
  set block_cell_name cfg_select_lck_ampl_control
  if { [catch {set cfg_select_lck_ampl_control [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_select_lck_ampl_control eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_SWBIT {4} \
   CONFIG.SRC_ADDR {3} \
 ] $cfg_select_lck_ampl_control

  # Create instance: cfg_select_lck_phase_control1, and set properties
  set block_name cfg_select
  set block_cell_name cfg_select_lck_phase_control1
  if { [catch {set cfg_select_lck_phase_control1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_select_lck_phase_control1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_SWBIT {5} \
   CONFIG.SRC_ADDR {3} \
 ] $cfg_select_lck_phase_control1

  # Create instance: cfg_select_phase_control, and set properties
  set block_name cfg_select
  set block_cell_name cfg_select_phase_control
  if { [catch {set cfg_select_phase_control [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_select_phase_control eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.SRC_ADDR {3} \
 ] $cfg_select_phase_control

  # Create instance: cfg_select_qcontrol, and set properties
  set block_name cfg_select
  set block_cell_name cfg_select_qcontrol
  if { [catch {set cfg_select_qcontrol [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_select_qcontrol eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CFG_SWBIT {3} \
   CONFIG.SRC_ADDR {3} \
 ] $cfg_select_qcontrol

  # Create instance: cfg_to_axis_Atau, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_axis_Atau
  if { [catch {set cfg_to_axis_Atau [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_axis_Atau eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.SRC_ADDR {27} \
 ] $cfg_to_axis_Atau

  # Create instance: cfg_to_axis_dc, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_axis_dc
  if { [catch {set cfg_to_axis_dc [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_axis_dc eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {5} \
 ] $cfg_to_axis_dc

  # Create instance: cfg_to_axis_dc_tau, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_axis_dc_tau
  if { [catch {set cfg_to_axis_dc_tau [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_axis_dc_tau eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.SRC_ADDR {28} \
 ] $cfg_to_axis_dc_tau

  # Create instance: cfg_to_axis_qc_delay, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_axis_qc_delay
  if { [catch {set cfg_to_axis_qc_delay [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_axis_qc_delay eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {16} \
   CONFIG.SRC_ADDR {29} \
   CONFIG.SRC_BITS {16} \
 ] $cfg_to_axis_qc_delay

  # Create instance: cfg_to_axis_qc_gain, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_axis_qc_gain
  if { [catch {set cfg_to_axis_qc_gain [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_axis_qc_gain eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {16} \
   CONFIG.SRC_ADDR {29} \
   CONFIG.SRC_BITS {32} \
 ] $cfg_to_axis_qc_gain

  # Create instance: cfg_to_axis_tau, and set properties
  set block_name cfg_to_axis
  set block_cell_name cfg_to_axis_tau
  if { [catch {set cfg_to_axis_tau [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cfg_to_axis_tau eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DST_WIDTH {32} \
   CONFIG.MAXIS_TDATA_WIDTH {32} \
   CONFIG.SRC_ADDR {4} \
 ] $cfg_to_axis_tau

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {80.0} \
   CONFIG.CLKIN2_JITTER_PS {166.66} \
   CONFIG.CLKOUT1_JITTER {104.759} \
   CONFIG.CLKOUT1_PHASE_ERROR {96.948} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {250} \
   CONFIG.CLKOUT2_JITTER {137.150} \
   CONFIG.CLKOUT2_PHASE_ERROR {96.948} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {62.5} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {8.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {8.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.000} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {4.000} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {16} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.NUM_OUT_CLKS {2} \
   CONFIG.PRIM_IN_FREQ {125} \
   CONFIG.SECONDARY_SOURCE {Single_ended_clock_capable_pin} \
   CONFIG.USE_INCLK_SWITCHOVER {false} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: cordic_atan_xy, and set properties
  set cordic_atan_xy [ create_bd_cell -type ip -vlnv xilinx.com:ip:cordic:6.0 cordic_atan_xy ]
  set_property -dict [ list \
   CONFIG.Coarse_Rotation {true} \
   CONFIG.Data_Format {SignedFraction} \
   CONFIG.Functional_Selection {Arc_Tan} \
   CONFIG.Input_Width {28} \
   CONFIG.Output_Width {24} \
   CONFIG.Pipelining_Mode {Optimal} \
   CONFIG.Round_Mode {Nearest_Even} \
 ] $cordic_atan_xy

  # Create instance: cordic_sqrt, and set properties
  set cordic_sqrt [ create_bd_cell -type ip -vlnv xilinx.com:ip:cordic:6.0 cordic_sqrt ]
  set_property -dict [ list \
   CONFIG.Coarse_Rotation {false} \
   CONFIG.Data_Format {UnsignedFraction} \
   CONFIG.Functional_Selection {Square_Root} \
   CONFIG.Input_Width {45} \
   CONFIG.Output_Width {24} \
   CONFIG.Pipelining_Mode {Optimal} \
   CONFIG.Round_Mode {Nearest_Even} \
 ] $cordic_sqrt

  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {125} \
   CONFIG.Frequency_Resolution {0.00001} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {10} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {25} \
   CONFIG.PINC1 {0} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {44} \
   CONFIG.Phase_offset {None} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {140} \
 ] $dds_compiler_0

  # Create instance: led_connect_0, and set properties
  set block_name led_connect
  set block_cell_name led_connect_0
  if { [catch {set led_connect_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $led_connect_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: lms_phase_amplitude_detector_0, and set properties
  set block_name lms_phase_amplitude_detector
  set block_cell_name lms_phase_amplitude_detector_0
  if { [catch {set lms_phase_amplitude_detector_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $lms_phase_amplitude_detector_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.SC_DATA_WIDTH {25} \
   CONFIG.USE_DUAL_PAC {1} \
 ] $lms_phase_amplitude_detector_0

  # Create instance: util_ds_buf_1, and set properties
  set util_ds_buf_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_1 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {2} \
 ] $util_ds_buf_1

  # Create instance: util_ds_buf_2, and set properties
  set util_ds_buf_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_2 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {OBUFDS} \
   CONFIG.C_SIZE {2} \
 ] $util_ds_buf_2

  # Create interface connections
  connect_bd_intf_net -intf_net PS_Amplitude_Controller_M_AXIS_CONTROL [get_bd_intf_pins PS_Amplitude_Controller/M_AXIS_CONTROL] [get_bd_intf_pins VolumeAdjuster16_14_and_QCtrl/SV_AXIS]
  connect_bd_intf_net -intf_net PS_Amplitude_Controller_M_AXIS_CONTROL2 [get_bd_intf_pins PS_Amplitude_Controller/M_AXIS_CONTROL2] [get_bd_intf_pins PS_data_transport/S_AXIS2]
  connect_bd_intf_net -intf_net PS_Amplitude_Controller_M_AXIS_PASS2 [get_bd_intf_pins PS_Amplitude_Controller/M_AXIS_PASS2] [get_bd_intf_pins PS_data_transport/S_AXIS5]
  connect_bd_intf_net -intf_net PS_BRAM_PORTA [get_bd_intf_pins PS/BRAM_PORTA] [get_bd_intf_pins PS_data_transport/BRAM_PORTB]
  connect_bd_intf_net -intf_net PS_Phase_Controller_M_AXIS_CONTROL [get_bd_intf_pins PS_Phase_Controller/M_AXIS_CONTROL] [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net PS_Phase_Controller_M_AXIS_CONTROL2 [get_bd_intf_pins PS_Phase_Controller/M_AXIS_CONTROL2] [get_bd_intf_pins PS_data_transport/S_AXIS3]
  connect_bd_intf_net -intf_net PS_Phase_Controller_M_AXIS_PASS2 [get_bd_intf_pins PS_Phase_Controller/M_AXIS_PASS2] [get_bd_intf_pins PS_data_transport/S_AXIS4]
  connect_bd_intf_net -intf_net PS_data_transport_M_AXIS_aux [get_bd_intf_pins PS_data_transport/M_AXIS_aux] [get_bd_intf_pins axis_sc26_to_14_0/S_AXIS_aux]
  connect_bd_intf_net -intf_net S_AXIS1_1 [get_bd_intf_pins PS_data_transport/S_AXIS1] [get_bd_intf_pins axis_decimator_0/M_AXIS_S01]
  connect_bd_intf_net -intf_net VolumeAdjuster16_14_0_M_AXIS [get_bd_intf_pins VolumeAdjuster16_14_and_QCtrl/M_AXIS] [get_bd_intf_pins axis_red_pitaya_dac_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dc_filter_0_M_AXIS [get_bd_intf_pins axis_dc_filter_0/M_AXIS_AC_LMS] [get_bd_intf_pins lms_phase_amplitude_detector_0/S_AXIS_SIGNAL]
  connect_bd_intf_net -intf_net axis_dc_filter_0_M_AXIS_ACDC [get_bd_intf_pins PS_data_transport/S_AXIS6] [get_bd_intf_pins axis_dc_filter_0/M_AXIS_ACDC]
  connect_bd_intf_net -intf_net axis_decimator_0_M_AXIS_S0 [get_bd_intf_pins axis_dc_filter_0/S_AXIS] [get_bd_intf_pins axis_decimator_0/M_AXIS_S0]
  connect_bd_intf_net -intf_net axis_red_pitaya_adc_0_M_AXIS [get_bd_intf_pins axis_decimator_0/S_AXIS_SIGNAL] [get_bd_intf_pins axis_red_pitaya_adc_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_sc26_to_14_0_M_AXIS [get_bd_intf_pins VolumeAdjuster16_14_and_QCtrl/S_AXIS] [get_bd_intf_pins axis_sc26_to_14_0/M_AXIS]
  connect_bd_intf_net -intf_net cordic_atan_xy_M_AXIS_DOUT [get_bd_intf_pins PS_Phase_Controller/S_AXIS] [get_bd_intf_pins cordic_atan_xy/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net cordic_sqrt_M_AXIS_DOUT [get_bd_intf_pins PS_Amplitude_Controller/S_AXIS] [get_bd_intf_pins cordic_sqrt/M_AXIS_DOUT]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA] [get_bd_intf_pins lms_phase_amplitude_detector_0/S_AXIS_SC]
  connect_bd_intf_net -intf_net lms_phase_amplitude_detector_0_M_AXIS_AM2 [get_bd_intf_pins cordic_sqrt/S_AXIS_CARTESIAN] [get_bd_intf_pins lms_phase_amplitude_detector_0/M_AXIS_AM2]
  connect_bd_intf_net -intf_net lms_phase_amplitude_detector_0_M_AXIS_LockInX [get_bd_intf_pins PS_data_transport/S_AXIS7] [get_bd_intf_pins lms_phase_amplitude_detector_0/M_AXIS_LockInX]
  connect_bd_intf_net -intf_net lms_phase_amplitude_detector_0_M_AXIS_LockInY [get_bd_intf_pins PS_data_transport/S_AXIS8] [get_bd_intf_pins lms_phase_amplitude_detector_0/M_AXIS_LockInY]
  connect_bd_intf_net -intf_net lms_phase_amplitude_detector_0_M_AXIS_SC [get_bd_intf_pins axis_sc26_to_14_0/S_AXIS] [get_bd_intf_pins lms_phase_amplitude_detector_0/M_AXIS_SC]
  connect_bd_intf_net -intf_net lms_phase_amplitude_detector_0_M_AXIS_SIGNAL_M [get_bd_intf_pins VolumeAdjuster16_14_and_QCtrl/S_AXIS_SIGNAL_M] [get_bd_intf_pins axis_dc_filter_0/M_AXIS_AC16]
  connect_bd_intf_net -intf_net lms_phase_amplitude_detector_0_M_AXIS_XY [get_bd_intf_pins cordic_atan_xy/S_AXIS_CARTESIAN] [get_bd_intf_pins lms_phase_amplitude_detector_0/M_AXIS_XY]
  connect_bd_intf_net -intf_net processing_system7_0_DDR [get_bd_intf_ports DDR] [get_bd_intf_pins PS/DDR]
  connect_bd_intf_net -intf_net processing_system7_0_FIXED_IO [get_bd_intf_ports FIXED_IO] [get_bd_intf_pins PS/FIXED_IO]

  # Create port connections
  connect_bd_net -net Net [get_bd_ports exp_p_io] [get_bd_pins PS_data_transport/exp_p_io]
  connect_bd_net -net Net1 [get_bd_ports exp_n_io] [get_bd_pins PS_data_transport/exp_n_io]
  connect_bd_net -net PS_Amplitude_Controller_mon_control_lower32 [get_bd_pins PS/gpio_io_2_x6] [get_bd_pins PS_Amplitude_Controller/mon_control_lower32]
  connect_bd_net -net PS_Amplitude_Controller_status_max [get_bd_pins PS_Amplitude_Controller/status_max] [get_bd_pins led_connect_0/led3]
  connect_bd_net -net PS_Amplitude_Controller_status_min [get_bd_pins PS_Amplitude_Controller/status_min] [get_bd_pins led_connect_0/led2]
  connect_bd_net -net PS_Dout [get_bd_pins PS/cfg_data_reg_1] [get_bd_pins PS_data_transport/cfg1]
  connect_bd_net -net PS_Phase_Controller_mon_control_B [get_bd_pins PS_Phase_Controller/mon_control_B] [get_bd_pins lms_phase_amplitude_detector_0/DDS_dphi]
  connect_bd_net -net PS_Phase_Controller_status_max [get_bd_pins PS_Phase_Controller/status_max] [get_bd_pins led_connect_0/led6]
  connect_bd_net -net PS_Phase_Controller_status_min [get_bd_pins PS_Phase_Controller/status_min] [get_bd_pins led_connect_0/led5]
  connect_bd_net -net PS_cfg_data [get_bd_pins PS/cfg_data_reg_0] [get_bd_pins PS_Amplitude_Controller/cfg] [get_bd_pins PS_Phase_Controller/cfg] [get_bd_pins PS_data_transport/cfg] [get_bd_pins cfg_select_amplitude_control/cfg] [get_bd_pins cfg_select_lck_ampl_control/cfg] [get_bd_pins cfg_select_lck_phase_control1/cfg] [get_bd_pins cfg_select_phase_control/cfg] [get_bd_pins cfg_select_qcontrol/cfg] [get_bd_pins cfg_to_axis_Atau/cfg] [get_bd_pins cfg_to_axis_dc/cfg] [get_bd_pins cfg_to_axis_dc_tau/cfg] [get_bd_pins cfg_to_axis_qc_delay/cfg] [get_bd_pins cfg_to_axis_qc_gain/cfg] [get_bd_pins cfg_to_axis_tau/cfg]
  connect_bd_net -net PS_data_transport_finished_state [get_bd_pins PS_data_transport/McBSP_Frame] [get_bd_pins led_connect_0/led8]
  connect_bd_net -net PS_data_transport_writeposition [get_bd_pins PS/gpio_io_5_x12] [get_bd_pins PS_data_transport/writeposition]
  connect_bd_net -net PS_data_transport_y [get_bd_pins PS_data_transport/McBSP_sending] [get_bd_pins led_connect_0/led7]
  connect_bd_net -net adc_clk_n_i_1 [get_bd_ports adc_clk_n_i] [get_bd_pins axis_red_pitaya_adc_0/adc_clk_n]
  connect_bd_net -net adc_clk_p_i_1 [get_bd_ports adc_clk_p_i] [get_bd_pins axis_red_pitaya_adc_0/adc_clk_p]
  connect_bd_net -net adc_dat_a_i_1 [get_bd_ports adc_dat_a_i] [get_bd_pins axis_red_pitaya_adc_0/adc_dat_a]
  connect_bd_net -net adc_dat_b_i_1 [get_bd_ports adc_dat_b_i] [get_bd_pins axis_red_pitaya_adc_0/adc_dat_b]
  connect_bd_net -net amplitude_controller_mon_signal [get_bd_pins PS/gpio_io_1_x4] [get_bd_pins PS_Amplitude_Controller/mon_signal]
  connect_bd_net -net axis_dc_filter_0_dbg_m [get_bd_pins PS/gpio_io_1_x3] [get_bd_pins axis_dc_filter_0/dbg_m]
  connect_bd_net -net axis_dc_filter_0_dbg_mdc [get_bd_pins PS/gpio_io_2_x5] [get_bd_pins axis_dc_filter_0/dbg_mdc]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_clk1 [get_bd_pins PS/slowest_sync_clk] [get_bd_pins PS_Amplitude_Controller/aclk] [get_bd_pins PS_Phase_Controller/aclk] [get_bd_pins PS_data_transport/a2_clk] [get_bd_pins PS_data_transport/a_clk] [get_bd_pins VolumeAdjuster16_14_and_QCtrl/a_clk] [get_bd_pins VolumeAdjuster16_14_and_QCtrl/adc_clk] [get_bd_pins axis_dc_filter_0/aclk] [get_bd_pins axis_decimator_0/aclk] [get_bd_pins axis_decimator_0/adc_clk] [get_bd_pins axis_red_pitaya_adc_0/adc_clk] [get_bd_pins axis_red_pitaya_dac_0/aclk] [get_bd_pins axis_sc26_to_14_0/a_clk] [get_bd_pins cfg_to_axis_Atau/a_clk] [get_bd_pins cfg_to_axis_dc/a_clk] [get_bd_pins cfg_to_axis_dc_tau/a_clk] [get_bd_pins cfg_to_axis_qc_delay/a_clk] [get_bd_pins cfg_to_axis_qc_gain/a_clk] [get_bd_pins cfg_to_axis_tau/a_clk] [get_bd_pins clk_wiz_0/clk_in1] [get_bd_pins cordic_atan_xy/aclk] [get_bd_pins cordic_sqrt/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins lms_phase_amplitude_detector_0/aclk]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_csn [get_bd_ports adc_csn_o] [get_bd_pins axis_red_pitaya_adc_0/adc_csn]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_clk [get_bd_ports dac_clk_o] [get_bd_pins axis_red_pitaya_dac_0/dac_clk]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_dat [get_bd_ports dac_dat_o] [get_bd_pins axis_red_pitaya_dac_0/dac_dat]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_rst [get_bd_ports dac_rst_o] [get_bd_pins axis_red_pitaya_dac_0/dac_rst]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_sel [get_bd_ports dac_sel_o] [get_bd_pins axis_red_pitaya_dac_0/dac_sel]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_wrt [get_bd_ports dac_wrt_o] [get_bd_pins axis_red_pitaya_dac_0/dac_wrt]
  connect_bd_net -net cfg_axis_phaseinc_status [get_bd_pins PS_Phase_Controller/enable] [get_bd_pins cfg_select_phase_control/status] [get_bd_pins led_connect_0/led4]
  connect_bd_net -net cfg_axis_volume_status [get_bd_pins PS_Amplitude_Controller/enable] [get_bd_pins cfg_select_amplitude_control/status] [get_bd_pins led_connect_0/led1]
  connect_bd_net -net cfg_select_lck_ampl_control_status [get_bd_pins cfg_select_lck_ampl_control/status] [get_bd_pins lms_phase_amplitude_detector_0/lck_ampl]
  connect_bd_net -net cfg_select_lck_phase_control1_status [get_bd_pins cfg_select_lck_phase_control1/status] [get_bd_pins lms_phase_amplitude_detector_0/lck_phase]
  connect_bd_net -net cfg_select_qcontrol_status [get_bd_pins VolumeAdjuster16_14_and_QCtrl/QC_enable] [get_bd_pins cfg_select_qcontrol/status]
  connect_bd_net -net cfg_to_axis_Atau_M_AXIS_tdata [get_bd_pins cfg_to_axis_Atau/M_AXIS_tdata] [get_bd_pins lms_phase_amplitude_detector_0/Atau]
  connect_bd_net -net cfg_to_axis_dc_M_AXIS_tdata [get_bd_pins axis_dc_filter_0/dc] [get_bd_pins cfg_to_axis_dc/M_AXIS_tdata]
  connect_bd_net -net cfg_to_axis_dc_tau_M_AXIS_tdata [get_bd_pins axis_dc_filter_0/dc_tau] [get_bd_pins cfg_to_axis_dc_tau/M_AXIS_tdata]
  connect_bd_net -net cfg_to_axis_qc_delay_data [get_bd_pins VolumeAdjuster16_14_and_QCtrl/QC_delay] [get_bd_pins cfg_to_axis_qc_delay/data]
  connect_bd_net -net cfg_to_axis_qc_gain_data [get_bd_pins VolumeAdjuster16_14_and_QCtrl/QC_gain] [get_bd_pins cfg_to_axis_qc_gain/data]
  connect_bd_net -net cfg_to_axis_tau_M_AXIS_tdata [get_bd_pins cfg_to_axis_tau/M_AXIS_tdata] [get_bd_pins lms_phase_amplitude_detector_0/tau]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins axis_red_pitaya_dac_0/ddr_clk] [get_bd_pins clk_wiz_0/clk_out1]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins axis_red_pitaya_dac_0/locked] [get_bd_pins clk_wiz_0/locked]
  connect_bd_net -net daisy_n_i_1 [get_bd_ports daisy_n_i] [get_bd_pins util_ds_buf_1/IBUF_DS_N]
  connect_bd_net -net daisy_p_i_1 [get_bd_ports daisy_p_i] [get_bd_pins util_ds_buf_1/IBUF_DS_P]
  connect_bd_net -net gpio2_io_i_1 [get_bd_pins PS/gpio_io_4_x10] [get_bd_pins PS_Phase_Controller/mon_signal]
  connect_bd_net -net gpio_io_3_x7_1 [get_bd_pins PS/gpio_io_3_x7] [get_bd_pins PS_Amplitude_Controller/mon_control]
  connect_bd_net -net gpio_io_3_x8_1 [get_bd_pins PS/gpio_io_3_x8] [get_bd_pins PS_Phase_Controller/mon_control]
  connect_bd_net -net gpio_io_4_x9_1 [get_bd_pins PS/gpio_io_4_x9] [get_bd_pins PS_Phase_Controller/mon_control_lower32]
  connect_bd_net -net gpio_io_5_x11_1 [get_bd_pins PS/gpio_io_5_x11] [get_bd_pins PS_data_transport/delta_frequency_monitor]
  connect_bd_net -net gpio_io_6_x13_1 [get_bd_pins PS/gpio_io_6_x13] [get_bd_pins PS_data_transport/mon_control]
  connect_bd_net -net led_connect_0_leds [get_bd_ports led_o] [get_bd_pins led_connect_0/leds]
  connect_bd_net -net lms_phase_amplitude_detector_0_Aout [get_bd_pins PS/gpio_io_0_x1] [get_bd_pins lms_phase_amplitude_detector_0/M_AXIS_Aout_tdata]
  connect_bd_net -net lms_phase_amplitude_detector_0_Bout [get_bd_pins PS/gpio_io_0_x2] [get_bd_pins lms_phase_amplitude_detector_0/M_AXIS_Bout_tdata]
  connect_bd_net -net lms_phase_amplitude_detector_0_sc_zero_x [get_bd_pins axis_dc_filter_0/sc_zero] [get_bd_pins lms_phase_amplitude_detector_0/sc_zero_x]
  connect_bd_net -net util_ds_buf_1_IBUF_OUT [get_bd_pins util_ds_buf_1/IBUF_OUT] [get_bd_pins util_ds_buf_2/OBUF_IN]
  connect_bd_net -net util_ds_buf_2_OBUF_DS_N [get_bd_ports daisy_n_o] [get_bd_pins util_ds_buf_2/OBUF_DS_N]
  connect_bd_net -net util_ds_buf_2_OBUF_DS_P [get_bd_ports daisy_p_o] [get_bd_pins util_ds_buf_2/OBUF_DS_P]

  # Create address segments
  assign_bd_address -offset 0x40000000 -range 0x00200000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_bram_reader_0/s00_axi/reg0] -force
  assign_bd_address -offset 0x42000000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_cfg_register_0/s_axi/reg0] -force
  assign_bd_address -offset 0x42001000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_gpio_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x42002000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_gpio_1/S_AXI/Reg] -force
  assign_bd_address -offset 0x42003000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_gpio_2/S_AXI/Reg] -force
  assign_bd_address -offset 0x42004000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_gpio_3/S_AXI/Reg] -force
  assign_bd_address -offset 0x42005000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_gpio_4/S_AXI/Reg] -force
  assign_bd_address -offset 0x42006000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_gpio_5/S_AXI/Reg] -force
  assign_bd_address -offset 0x42007000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_gpio_6/S_AXI/Reg] -force
  assign_bd_address -offset 0x42008000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PS/processing_system7_0/Data] [get_bd_addr_segs PS/axi_gpio_7/S_AXI/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_Layers":"/PS_data_transport/McBSP_io_connect_0_McBSP_clk:true|/PS/Net:true|/util_ds_buf_1_IBUF_OUT:true|/axis_red_pitaya_dac_0_dac_clk:true|/PS_data_transport/axis_4s_combine_0_BR_reset:true|/PS/rst_ps7_0_125M_peripheral_aresetn:true|/util_ds_buf_2_OBUF_DS_N:true|/PS/proc_sys_reset_0_interconnect_aresetn:true|/clk_wiz_0_clk_out1:true|/axis_red_pitaya_adc_0_adc_clk1:true|/util_ds_buf_2_OBUF_DS_P:true|/PS_data_transport/axis_4s_combine_0_bram_porta_clk:true|/PS/processing_system7_0_FCLK_RESET0_N:true|/axis_red_pitaya_dac_0_dac_rst:true|/PS/proc_sys_reset_0_peripheral_aresetn:true|/PS/rst_ps7_0_125M_interconnect_aresetn:true|",
   "Default View_ScaleFactor":"0.594127",
   "Default View_TopLeft":"-177,-466",
   "Display-PortTypeClock":"true",
   "Display-PortTypeOthers":"true",
   "Display-PortTypeReset":"true",
   "ExpandedHierarchyInLayout":"",
   "Interfaces View_ExpandedHierarchyInLayout":"",
   "Interfaces View_Layers":"/PS_data_transport/McBSP_io_connect_0_McBSP_clk:false|/PS/Net:false|/util_ds_buf_1_IBUF_OUT:false|/axis_red_pitaya_dac_0_dac_clk:false|/PS_data_transport/axis_4s_combine_0_BR_reset:false|/PS/rst_ps7_0_125M_peripheral_aresetn:false|/util_ds_buf_2_OBUF_DS_N:false|/PS/proc_sys_reset_0_interconnect_aresetn:false|/clk_wiz_0_clk_out1:false|/axis_red_pitaya_adc_0_adc_clk1:false|/util_ds_buf_2_OBUF_DS_P:false|/PS_data_transport/axis_4s_combine_0_bram_porta_clk:false|/PS/processing_system7_0_FCLK_RESET0_N:false|/axis_red_pitaya_dac_0_dac_rst:false|/PS/proc_sys_reset_0_peripheral_aresetn:false|/PS/rst_ps7_0_125M_interconnect_aresetn:false|",
   "Interfaces View_Layout":"# # String gsaved with Nlview 7.0.21  2019-05-29 bk=1.5064 VDI=41 GEI=36 GUI=JA:9.0 TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -lvl 11 -x 3180 -y 120 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 11 -x 3180 -y 140 -defaultsOSRD
preplace port Vaux0 -pg 1 -lvl 0 -x 0 -y 20 -defaultsOSRD
preplace port Vaux1 -pg 1 -lvl 0 -x 0 -y 40 -defaultsOSRD
preplace port Vaux8 -pg 1 -lvl 0 -x 0 -y 60 -defaultsOSRD
preplace port Vaux9 -pg 1 -lvl 0 -x 0 -y 80 -defaultsOSRD
preplace port Vp_Vn -pg 1 -lvl 0 -x 0 -y 100 -defaultsOSRD
preplace port gpio_rtl_0 -pg 1 -lvl 11 -x 3180 -y 180 -defaultsOSRD
preplace port spi_rtl_0 -pg 1 -lvl 11 -x 3180 -y 220 -defaultsOSRD
preplace port adc_clk_n_i -pg 1 -lvl 0 -x 0 -y 120 -defaultsOSRD
preplace port adc_clk_p_i -pg 1 -lvl 0 -x 0 -y 140 -defaultsOSRD
preplace port adc_csn_o -pg 1 -lvl 11 -x 3180 -y 20 -defaultsOSRD
preplace port dac_sel_o -pg 1 -lvl 11 -x 3180 -y 60 -defaultsOSRD
preplace port dac_wrt_o -pg 1 -lvl 11 -x 3180 -y 80 -defaultsOSRD
preplace portBus adc_dat_a_i -pg 1 -lvl 0 -x 0 -y 160 -defaultsOSRD
preplace portBus adc_dat_b_i -pg 1 -lvl 0 -x 0 -y 180 -defaultsOSRD
preplace portBus dac_dat_o -pg 1 -lvl 11 -x 3180 -y 40 -defaultsOSRD
preplace portBus daisy_n_i -pg 1 -lvl 0 -x 0 -y 200 -defaultsOSRD
preplace portBus daisy_p_i -pg 1 -lvl 0 -x 0 -y 220 -defaultsOSRD
preplace portBus exp_n_io -pg 1 -lvl 11 -x 3180 -y 100 -defaultsOSRD
preplace portBus exp_p_io -pg 1 -lvl 11 -x 3180 -y 160 -defaultsOSRD
preplace portBus led_o -pg 1 -lvl 11 -x 3180 -y 200 -defaultsOSRD
preplace inst PS -pg 1 -lvl 6 -x 1890 -y 150 -defaultsOSRD
preplace inst PS_Amplitude_Controller -pg 1 -lvl 6 -x 1890 -y 340 -defaultsOSRD
preplace inst PS_Phase_Controller -pg 1 -lvl 2 -x 530 -y 460 -defaultsOSRD
preplace inst PS_data_transport -pg 1 -lvl 7 -x 2200 -y 370 -defaultsOSRD
preplace inst VolumeAdjuster16_14_and_QCtrl -pg 1 -lvl 9 -x 2780 -y 380 -defaultsOSRD
preplace inst axis_dc_filter_0 -pg 1 -lvl 3 -x 870 -y 570 -swap {6 1 2 3 4 5 0 7 8 9 10 11 12 13 14 15 16 17} -defaultsOSRD
preplace inst axis_decimator_0 -pg 1 -lvl 2 -x 530 -y 290 -swap {0 1 2 6 4 5 3 7 8 9 10 11 12 13} -defaultsOSRD
preplace inst axis_red_pitaya_adc_0 -pg 1 -lvl 1 -x 190 -y 290 -defaultsOSRD
preplace inst axis_red_pitaya_dac_0 -pg 1 -lvl 10 -x 3050 -y 380 -defaultsOSRD
preplace inst axis_sc26_to_14_0 -pg 1 -lvl 8 -x 2480 -y 380 -swap {0 1 2 6 4 5 3 7 8 9} -defaultsOSRD
preplace inst cfg_to_axis_Atau -pg 1 -lvl 9 -x 2780 -y 60 -defaultsOSRD
preplace inst cfg_to_axis_dc -pg 1 -lvl 5 -x 1570 -y 60 -defaultsOSRD
preplace inst cfg_to_axis_dc_tau -pg 1 -lvl 8 -x 2480 -y 60 -defaultsOSRD
preplace inst cfg_to_axis_qc_delay -pg 1 -lvl 10 -x 3050 -y 60 -defaultsOSRD
preplace inst cfg_to_axis_qc_gain -pg 1 -lvl 5 -x 1570 -y 160 -defaultsOSRD
preplace inst cfg_to_axis_tau -pg 1 -lvl 10 -x 3050 -y 200 -defaultsOSRD
preplace inst cordic_atan_xy -pg 1 -lvl 1 -x 190 -y 460 -defaultsOSRD
preplace inst cordic_sqrt -pg 1 -lvl 5 -x 1570 -y 370 -defaultsOSRD
preplace inst dds_compiler_0 -pg 1 -lvl 3 -x 870 -y 420 -defaultsOSRD
preplace inst lms_phase_amplitude_detector_0 -pg 1 -lvl 4 -x 1220 -y 430 -defaultsOSRD
preplace inst util_ds_buf_1 -pg 1 -lvl 1 -x 190 -y 60 -defaultsOSRD
preplace netloc dds_compiler_0_M_AXIS_DATA 1 3 1 NJ 420
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_LockInX 1 4 3 NJ 430 NJ 430 N
preplace netloc cordic_sqrt_M_AXIS_DOUT 1 5 1 1750 340n
preplace netloc S_AXIS1_1 1 2 5 NJ 310 NJ 310 NJ 310 1740J 420 2040
preplace netloc axis_red_pitaya_adc_0_M_AXIS 1 1 1 NJ 290
preplace netloc axis_dc_filter_0_M_AXIS_ACDC 1 3 4 NJ 570 NJ 570 NJ 570 2060
preplace netloc axis_sc26_to_14_0_M_AXIS 1 8 1 N 380
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_SC 1 4 4 NJ 470 NJ 470 2030J 500 2340
preplace netloc processing_system7_0_FIXED_IO 1 6 5 NJ 140 NJ 140 NJ 140 NJ 140 NJ
preplace netloc axis_dc_filter_0_M_AXIS 1 3 1 1030 440n
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_SIGNAL_M 1 3 6 NJ 590 NJ 590 NJ 590 NJ 590 NJ 590 2620
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_LockInY 1 4 3 NJ 450 NJ 450 N
preplace netloc cordic_atan_xy_M_AXIS_DOUT 1 1 1 NJ 460
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_XY 1 0 5 20 370 NJ 370 690J 480 1040J 550 1400
preplace netloc processing_system7_0_DDR 1 6 5 NJ 120 NJ 120 NJ 120 NJ 120 NJ
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_AM2 1 4 1 NJ 370
preplace netloc axis_decimator_0_M_AXIS_S0 1 2 1 700 270n
preplace netloc PS_Phase_Controller_M_AXIS_PASS2 1 2 5 NJ 490 1020J 560 NJ 560 NJ 560 2050
preplace netloc PS_Amplitude_Controller_M_AXIS_PASS2 1 6 1 2030 370n
preplace netloc PS_Phase_Controller_M_AXIS_CONTROL2 1 2 5 710J 250 NJ 250 NJ 250 NJ 250 2050
preplace netloc VolumeAdjuster16_14_0_M_AXIS 1 9 1 N 380
preplace netloc PS_Phase_Controller_M_AXIS_CONTROL 1 2 1 720 420n
preplace netloc PS_Amplitude_Controller_M_AXIS_CONTROL 1 6 3 2030J 230 NJ 230 2620
preplace netloc PS_Amplitude_Controller_M_AXIS_CONTROL2 1 6 1 N 330
preplace netloc PS_BRAM_PORTA 1 6 1 2060 100n
preplace netloc PS_data_transport_M_AXIS_aux 1 7 1 N 370
levelinfo -pg 1 0 190 530 870 1220 1570 1890 2200 2480 2780 3050 3180
pagesize -pg 1 -db -bbox -sgen -180 0 3350 650
",
   "Interfaces View_ScaleFactor":"1.07952",
   "Interfaces View_TopLeft":"-176,-402",
   "No Loops_ScaleFactor":"0.693234",
   "No Loops_TopLeft":"-176,-453",
   "guistr":"# # String gsaved with Nlview 7.0.21  2019-05-29 bk=1.5064 VDI=41 GEI=36 GUI=JA:9.0 TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -lvl 11 -x 4330 -y 370 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 11 -x 4330 -y 910 -defaultsOSRD
preplace port Vaux0 -pg 1 -lvl 0 -x -10 -y 20 -defaultsOSRD
preplace port Vaux1 -pg 1 -lvl 0 -x -10 -y 40 -defaultsOSRD
preplace port Vaux8 -pg 1 -lvl 0 -x -10 -y 60 -defaultsOSRD
preplace port Vaux9 -pg 1 -lvl 0 -x -10 -y 80 -defaultsOSRD
preplace port Vp_Vn -pg 1 -lvl 0 -x -10 -y 100 -defaultsOSRD
preplace port gpio_rtl_0 -pg 1 -lvl 11 -x 4330 -y 80 -defaultsOSRD
preplace port spi_rtl_0 -pg 1 -lvl 11 -x 4330 -y 100 -defaultsOSRD
preplace port adc_clk_n_i -pg 1 -lvl 0 -x -10 -y 890 -defaultsOSRD
preplace port adc_clk_p_i -pg 1 -lvl 0 -x -10 -y 870 -defaultsOSRD
preplace port adc_csn_o -pg 1 -lvl 11 -x 4330 -y 1110 -defaultsOSRD
preplace port adc_enc_n_o -pg 1 -lvl 11 -x 4330 -y 20 -defaultsOSRD
preplace port adc_enc_p_o -pg 1 -lvl 11 -x 4330 -y 40 -defaultsOSRD
preplace port dac_clk_o -pg 1 -lvl 11 -x 4330 -y 970 -defaultsOSRD
preplace port dac_rst_o -pg 1 -lvl 11 -x 4330 -y 990 -defaultsOSRD
preplace port dac_sel_o -pg 1 -lvl 11 -x 4330 -y 1010 -defaultsOSRD
preplace port dac_wrt_o -pg 1 -lvl 11 -x 4330 -y 1030 -defaultsOSRD
preplace port reset_rtl_0 -pg 1 -lvl 0 -x -10 -y 120 -defaultsOSRD
preplace portBus adc_dat_a_i -pg 1 -lvl 0 -x -10 -y 910 -defaultsOSRD
preplace portBus adc_dat_b_i -pg 1 -lvl 0 -x -10 -y 930 -defaultsOSRD
preplace portBus dac_dat_o -pg 1 -lvl 11 -x 4330 -y 1050 -defaultsOSRD
preplace portBus dac_pwm_o -pg 1 -lvl 11 -x 4330 -y 60 -defaultsOSRD
preplace portBus daisy_n_i -pg 1 -lvl 0 -x -10 -y 1250 -defaultsOSRD
preplace portBus daisy_n_o -pg 1 -lvl 11 -x 4330 -y 1240 -defaultsOSRD
preplace portBus daisy_p_i -pg 1 -lvl 0 -x -10 -y 1230 -defaultsOSRD
preplace portBus daisy_p_o -pg 1 -lvl 11 -x 4330 -y 1220 -defaultsOSRD
preplace portBus exp_n_io -pg 1 -lvl 11 -x 4330 -y 510 -defaultsOSRD
preplace portBus exp_p_io -pg 1 -lvl 11 -x 4330 -y 530 -defaultsOSRD
preplace portBus led_o -pg 1 -lvl 11 -x 4330 -y 240 -defaultsOSRD
preplace inst PS -pg 1 -lvl 6 -x 2500 -y 610 -defaultsOSRD
preplace inst PS_Amplitude_Controller -pg 1 -lvl 6 -x 2500 -y 140 -defaultsOSRD
preplace inst PS_Phase_Controller -pg 1 -lvl 2 -x 560 -y 620 -defaultsOSRD
preplace inst PS_data_transport -pg 1 -lvl 7 -x 3060 -y 550 -defaultsOSRD
preplace inst VolumeAdjuster16_14_and_QCtrl -pg 1 -lvl 9 -x 3820 -y 780 -defaultsOSRD
preplace inst axis_dc_filter_0 -pg 1 -lvl 3 -x 1000 -y 290 -swap {6 1 2 3 4 5 0 7 8 9 10 11 12 13 14 15 16 17} -defaultsOSRD
preplace inst axis_decimator_0 -pg 1 -lvl 2 -x 560 -y 890 -swap {0 1 2 6 4 5 3 7 8 9 10 11 12 13} -defaultsOSRD
preplace inst axis_red_pitaya_adc_0 -pg 1 -lvl 1 -x 200 -y 900 -defaultsOSRD
preplace inst axis_red_pitaya_dac_0 -pg 1 -lvl 10 -x 4160 -y 1010 -defaultsOSRD
preplace inst axis_sc26_to_14_0 -pg 1 -lvl 8 -x 3480 -y 1000 -swap {0 1 2 6 4 5 3 7 8 9} -defaultsOSRD
preplace inst cfg_select_amplitude_control -pg 1 -lvl 5 -x 1990 -y 230 -defaultsOSRD
preplace inst cfg_select_lck_ampl_control -pg 1 -lvl 3 -x 1000 -y 640 -defaultsOSRD
preplace inst cfg_select_lck_phase_control1 -pg 1 -lvl 3 -x 1000 -y 1170 -defaultsOSRD
preplace inst cfg_select_phase_control -pg 1 -lvl 1 -x 200 -y 480 -defaultsOSRD
preplace inst cfg_select_qcontrol -pg 1 -lvl 8 -x 3480 -y 590 -defaultsOSRD
preplace inst cfg_to_axis_Atau -pg 1 -lvl 3 -x 1000 -y 820 -defaultsOSRD
preplace inst cfg_to_axis_dc -pg 1 -lvl 2 -x 560 -y 180 -defaultsOSRD
preplace inst cfg_to_axis_dc_tau -pg 1 -lvl 2 -x 560 -y 320 -defaultsOSRD
preplace inst cfg_to_axis_qc_delay -pg 1 -lvl 8 -x 3480 -y 840 -defaultsOSRD
preplace inst cfg_to_axis_qc_gain -pg 1 -lvl 8 -x 3480 -y 700 -defaultsOSRD
preplace inst cfg_to_axis_tau -pg 1 -lvl 3 -x 1000 -y 1050 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 9 -x 3820 -y 1030 -defaultsOSRD
preplace inst cordic_atan_xy -pg 1 -lvl 1 -x 200 -y 590 -defaultsOSRD
preplace inst cordic_sqrt -pg 1 -lvl 5 -x 1990 -y 450 -defaultsOSRD
preplace inst dds_compiler_0 -pg 1 -lvl 3 -x 1000 -y 480 -defaultsOSRD
preplace inst led_connect_0 -pg 1 -lvl 10 -x 4160 -y 240 -defaultsOSRD
preplace inst util_ds_buf_1 -pg 1 -lvl 9 -x 3820 -y 1230 -defaultsOSRD
preplace inst util_ds_buf_2 -pg 1 -lvl 10 -x 4160 -y 1230 -defaultsOSRD
preplace inst lms_phase_amplitude_detector_0 -pg 1 -lvl 4 -x 1500 -y 680 -defaultsOSRD
preplace netloc Net 1 7 4 3340J 530 NJ 530 NJ 530 NJ
preplace netloc Net1 1 7 4 3320J 510 NJ 510 NJ 510 NJ
preplace netloc PS_Amplitude_Controller_mon_control_lower32 1 5 2 2230 290 2700
preplace netloc PS_Amplitude_Controller_status_max 1 6 4 NJ 200 NJ 200 NJ 200 3990
preplace netloc PS_Amplitude_Controller_status_min 1 6 4 NJ 220 NJ 220 NJ 220 3980
preplace netloc PS_Dout 1 6 1 2840 670n
preplace netloc PS_Phase_Controller_mon_control_B 1 2 2 790 410 1200J
preplace netloc PS_Phase_Controller_status_max 1 2 8 740 730 1180J 890 NJ 890 2230J 900 2810J 290 NJ 290 NJ 290 4000J
preplace netloc PS_Phase_Controller_status_min 1 2 8 730 740 1170J 900 NJ 900 2180J 910 2800J 270 NJ 270 NJ 270 3990J
preplace netloc PS_cfg_data 1 0 8 30 410 390 90 770 170 NJ 170 1760 170 2220 300 2720 340 3330
preplace netloc PS_data_transport_finished_state 1 7 3 3300J 360 NJ 360 4020
preplace netloc PS_data_transport_writeposition 1 5 3 2220 320 NJ 320 3260
preplace netloc PS_data_transport_y 1 7 3 3290J 350 NJ 350 4010
preplace netloc adc_clk_n_i_1 1 0 1 NJ 890
preplace netloc adc_clk_p_i_1 1 0 1 NJ 870
preplace netloc adc_dat_a_i_1 1 0 1 NJ 910
preplace netloc adc_dat_b_i_1 1 0 1 NJ 930
preplace netloc amplitude_controller_mon_signal 1 5 2 2250 310 2690
preplace netloc axis_dc_filter_0_dbg_m 1 3 3 NJ 310 NJ 310 2210
preplace netloc axis_dc_filter_0_dbg_mdc 1 3 3 1180J 350 NJ 350 2200
preplace netloc axis_red_pitaya_adc_0_adc_clk1 1 0 10 20 420 380 100 760 570 1260 500 1760 520 2190 880 2860 720 3340 920 3660 1110 4010J
preplace netloc axis_red_pitaya_adc_0_adc_csn 1 1 10 380J 970 NJ 970 NJ 970 NJ 970 NJ 970 2870J 910 NJ 910 NJ 910 NJ 910 4300J
preplace netloc axis_red_pitaya_dac_0_dac_clk 1 10 1 NJ 970
preplace netloc axis_red_pitaya_dac_0_dac_dat 1 10 1 NJ 1050
preplace netloc axis_red_pitaya_dac_0_dac_rst 1 10 1 NJ 990
preplace netloc axis_red_pitaya_dac_0_dac_sel 1 10 1 NJ 1010
preplace netloc axis_red_pitaya_dac_0_dac_wrt 1 10 1 NJ 1030
preplace netloc cfg_axis_phaseinc_status 1 1 9 370 80 NJ 80 NJ 80 NJ 80 2210J 270 2730J 250 NJ 250 NJ 250 3980J
preplace netloc cfg_axis_volume_status 1 5 5 2230 280 2720J 180 NJ 180 NJ 180 3980J
preplace netloc cfg_select_lck_ampl_control_status 1 3 1 1190J 640n
preplace netloc cfg_select_lck_phase_control1_status 1 3 1 1260 750n
preplace netloc cfg_select_qcontrol_status 1 8 1 3650 590n
preplace netloc cfg_to_axis_Atau_M_AXIS_tdata 1 3 1 1250 690n
preplace netloc cfg_to_axis_dc_M_AXIS_tdata 1 2 1 790 180n
preplace netloc cfg_to_axis_dc_tau_M_AXIS_tdata 1 2 1 730 310n
preplace netloc cfg_to_axis_qc_delay_data 1 8 1 3650 830n
preplace netloc cfg_to_axis_qc_gain_data 1 8 1 3620 710n
preplace netloc cfg_to_axis_tau_M_AXIS_tdata 1 3 1 1230 670n
preplace netloc clk_wiz_0_clk_out1 1 9 1 3990 1010n
preplace netloc clk_wiz_0_locked 1 9 1 4020 1040n
preplace netloc daisy_n_i_1 1 0 9 NJ 1250 NJ 1250 NJ 1250 NJ 1250 NJ 1250 NJ 1250 NJ 1250 NJ 1250 NJ
preplace netloc daisy_p_i_1 1 0 9 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ
preplace netloc gpio2_io_i_1 1 2 4 810 560 1230J 530 1720J 650 NJ
preplace netloc gpio_io_3_x7_1 1 5 2 2260 360 2710
preplace netloc gpio_io_3_x8_1 1 2 4 800 550 1190J 520 1740J 530 2180J
preplace netloc gpio_io_4_x9_1 1 2 4 820 580 1220J 510 1750J 620 2170J
preplace netloc led_connect_0_leds 1 10 1 NJ 240
preplace netloc lms_phase_amplitude_detector_0_Aout 1 4 2 NJ 630 2160
preplace netloc lms_phase_amplitude_detector_0_Bout 1 4 2 1760J 610 2170
preplace netloc lms_phase_amplitude_detector_0_sc_zero_x 1 2 3 830 920 NJ 920 1710
preplace netloc util_ds_buf_1_IBUF_OUT 1 9 1 N 1230
preplace netloc util_ds_buf_2_OBUF_DS_N 1 10 1 NJ 1240
preplace netloc util_ds_buf_2_OBUF_DS_P 1 10 1 NJ 1220
preplace netloc gpio_io_5_x11_1 1 5 3 2240 350 2730J 360 3250
preplace netloc gpio_io_6_x13_1 1 5 3 2260 890 NJ 890 3250
preplace netloc axis_sc26_to_14_0_M_AXIS 1 8 1 3640 730n
preplace netloc cordic_sqrt_M_AXIS_DOUT 1 5 1 2160 110n
preplace netloc axis_dc_filter_0_M_AXIS 1 3 1 1250 250n
preplace netloc axis_dc_filter_0_M_AXIS_ACDC 1 3 4 1260J 340 NJ 340 NJ 340 2700
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_LockInX 1 4 3 NJ 690 2180J 840 2820
preplace netloc processing_system7_0_FIXED_IO 1 6 5 2770J 370 3270J 380 NJ 380 NJ 380 4310J
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_SC 1 4 4 NJ 730 2160J 870 NJ 870 3270
preplace netloc PS_Phase_Controller_M_AXIS_CONTROL2 1 2 5 730 390 1200J 370 NJ 370 NJ 370 2760J
preplace netloc PS_Amplitude_Controller_M_AXIS_CONTROL 1 6 3 NJ 60 NJ 60 3660
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_AM2 1 4 1 1730 440n
preplace netloc PS_Amplitude_Controller_M_AXIS_CONTROL2 1 6 1 2830 80n
preplace netloc axis_decimator_0_M_AXIS_S0 1 2 1 780 250n
preplace netloc PS_BRAM_PORTA 1 6 1 2750 430n
preplace netloc VolumeAdjuster16_14_0_M_AXIS 1 9 1 4000 780n
preplace netloc PS_Phase_Controller_M_AXIS_CONTROL 1 2 1 750 470n
preplace netloc PS_data_transport_M_AXIS_aux 1 7 1 3310 480n
preplace netloc cordic_atan_xy_M_AXIS_DOUT 1 1 1 N 590
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_LockInY 1 4 3 NJ 710 2170J 850 2830
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_SIGNAL_M 1 3 6 1210 860 NJ 860 NJ 860 2870J 770 NJ 770 3630J
preplace netloc lms_phase_amplitude_detector_0_M_AXIS_XY 1 0 5 10 70 NJ 70 NJ 70 NJ 70 1710
preplace netloc S_AXIS1_1 1 2 5 NJ 910 NJ 910 NJ 910 2160J 920 2850
preplace netloc PS_Amplitude_Controller_M_AXIS_PASS2 1 6 1 2790 120n
preplace netloc PS_Phase_Controller_M_AXIS_PASS2 1 2 5 740 400 1190J 330 NJ 330 NJ 330 2780J
preplace netloc processing_system7_0_DDR 1 6 5 2740J 350 3280J 370 NJ 370 NJ 370 NJ
preplace netloc dds_compiler_0_M_AXIS_DATA 1 3 1 1240 480n
preplace netloc axis_red_pitaya_adc_0_M_AXIS 1 1 1 370 870n
levelinfo -pg 1 -10 200 560 1000 1500 1990 2500 3060 3480 3820 4160 4330
pagesize -pg 1 -db -bbox -sgen -190 0 4500 1310
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_system()
cr_bd_system ""
set_property REGISTERED_WITH_MANAGER "1" [get_files system.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files system.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z010clg400-1 -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z010clg400-1 -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
