# Makefile.in generated by automake 1.16.1 from Makefile.am.
# plug-ins/hard/MK3-EMU/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This is the Makefile.am for the DSP MK3 EMU project
#


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/gxsm3
pkgincludedir = $(includedir)/gxsm3
pkglibdir = $(libdir)/gxsm3
pkglibexecdir = $(libexecdir)/gxsm3
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = mk3dspemu$(EXEEXT)
subdir = plug-ins/hard/MK3-EMU
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gsettings.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/m4/yelp.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_mk3dspemu_OBJECTS = mk3dspemu-FB_spm.$(OBJEXT) \
	mk3dspemu-g_intrinsics.$(OBJEXT) \
	mk3dspemu-FB_spm_statemaschine.$(OBJEXT) \
	mk3dspemu-dataprocess.$(OBJEXT) \
	mk3dspemu-pac_pll_emu.$(OBJEXT) \
	mk3dspemu-FB_spm_offsetmove.$(OBJEXT) \
	mk3dspemu-FB_spm_areascan.$(OBJEXT) \
	mk3dspemu-FB_spm_CoolRunner_puls.$(OBJEXT) \
	mk3dspemu-FB_spm_probe.$(OBJEXT) \
	mk3dspemu-FB_spm_autoapproach.$(OBJEXT) \
	mk3dspemu-FB_spm_dsoszi.$(OBJEXT) \
	mk3dspemu-ReadWrite_GPIO.$(OBJEXT) \
	mk3dspemu-SR3_flash_support.$(OBJEXT) \
	mk3dspemu-spm_log.$(OBJEXT) mk3dspemu-dspemu_app.$(OBJEXT) \
	mk3dspemu-dspemu_app_window.$(OBJEXT) \
	mk3dspemu-dspemu_app_prefs.$(OBJEXT) \
	mk3dspemu-resources.$(OBJEXT)
mk3dspemu_OBJECTS = $(am_mk3dspemu_OBJECTS)
mk3dspemu_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
mk3dspemu_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mk3dspemu_CFLAGS) \
	$(CFLAGS) $(mk3dspemu_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/mk3dspemu-FB_spm.Po \
	./$(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Po \
	./$(DEPDIR)/mk3dspemu-FB_spm_areascan.Po \
	./$(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Po \
	./$(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Po \
	./$(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Po \
	./$(DEPDIR)/mk3dspemu-FB_spm_probe.Po \
	./$(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Po \
	./$(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Po \
	./$(DEPDIR)/mk3dspemu-SR3_flash_support.Po \
	./$(DEPDIR)/mk3dspemu-dataprocess.Po \
	./$(DEPDIR)/mk3dspemu-dspemu_app.Po \
	./$(DEPDIR)/mk3dspemu-dspemu_app_prefs.Po \
	./$(DEPDIR)/mk3dspemu-dspemu_app_window.Po \
	./$(DEPDIR)/mk3dspemu-g_intrinsics.Po \
	./$(DEPDIR)/mk3dspemu-pac_pll_emu.Po \
	./$(DEPDIR)/mk3dspemu-resources.Po \
	./$(DEPDIR)/mk3dspemu-spm_log.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(mk3dspemu_SOURCES)
DIST_SOURCES = $(mk3dspemu_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/thorwag/gxsm3-3.52.0/missing aclocal-1.16
ALLOCA = 
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/thorwag/gxsm3-3.52.0/missing autoconf
AUTOHEADER = ${SHELL} /home/thorwag/gxsm3-3.52.0/missing autoheader
AUTOMAKE = ${SHELL} /home/thorwag/gxsm3-3.52.0/missing automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -O0 -g
CPP = gcc -E
CPPFLAGS = -Wdate-time -D_FORTIFY_SOURCE=2
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -O0 -g -std=c++11
CYGPATH_W = echo
DEFAULT_FONT = 
DEFAULT_PRINT_FONT = 
DEFS = -DHAVE_CONFIG_H \
        -Wall \
        -DCOMPILEDBYNAME=\""$(USER)@`hostname`, `date`"\" \
	-DDSPEMU -DDSP_CC

DEPDIR = .deps
DISABLE_DEPRECATED_CFLAGS = 
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FFTW_LIBS = -lfftw3
FGREP = /usr/bin/grep -F
FULL_LIBEXECDIR = /usr/libexec
GETTEXT_PACKAGE = gxsm3
GLIB_COMPILE_RESOURCES = /usr/bin/glib-compile-resources
GLIB_COMPILE_SCHEMAS = /usr/lib/x86_64-linux-gnu/glib-2.0/glib-compile-schemas
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GLIB_MKENUMS = /usr/bin/glib-mkenums
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
GSETTINGS_DISABLE_SCHEMAS_COMPILE = 
GTKSOURCEVIEW_CFLAGS = -pthread -I/usr/include/gtksourceview-3.0 -I/usr/include/libxml2 -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GTKSOURCEVIEW_DEPENDENCY = gtksourceview-3.0
GTKSOURCEVIEW_LIBS = -lgtksourceview-3.0 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0
GTK_MAC_CFLAGS = 
GTK_MAC_LIBS = 
GXSM3_CFLAGS = -O0 -g -pthread -I/usr/include/gail-3.0 -I/usr/include/hdf5/serial -I/usr/include/gtksourceview-3.0 -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/gsettings-desktop-schemas  
GXSM3_IMPLIB = 
GXSM3_LIBS = -lxml2 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lgailutil-3 -lGL -lnetcdf -lfftw3 -lgtksourceview-3.0 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0  
GXSM3_MAJOR_VERSION = 3
GXSM3_MICRO_VERSION = 0
GXSM3_MINOR_VERSION = 52
GXSM3_PLUGINS_DATA_DIR = ${datarootdir}/gxsm3/plugins
GXSM3_PLUGINS_LIBS_DIR = ${prefix}/lib/gxsm3/plugins
HELP_DIR = ${datadir}/help
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
ITSTOOL = itstool
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -Wl,-Bsymbolic-functions -Wl,-z,relro
LIBOBJS = 
LIBPNG = -lpng -lz
LIBS = -lpython3.8 -lpython3.7m 
LIBSOUP_CFLAGS = -pthread -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
LIBSOUP_LIBS = -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBZ = -lz
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /home/thorwag/gxsm3-3.52.0/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = gcc
OBJCDEPMODE = depmode=none
OBJCFLAGS = -g -O2 -fdebug-prefix-map=/home/thorwag/gxsm3-3.52.0=. -fstack-protector-strong -Wformat -Werror=format-security
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = gxsm3
PACKAGE_BUGREPORT = http://sourceforge.net/tracker/?func=add&group_id=12992&atid=112992
PACKAGE_DATA_DIR = /usr/share/gxsm3
PACKAGE_DOC_DIR = /usr/share/doc/gxsm3
PACKAGE_ICON_DIR = /usr/share/gxsm3/icons
PACKAGE_NAME = gxsm3
PACKAGE_PIXMAPS_DIR = /usr/share/pixmaps/gxsm3
PACKAGE_STRING = gxsm3 3.52.0
PACKAGE_TARNAME = gxsm3
PACKAGE_URL = http://gxsm.sf.net
PACKAGE_VERSION = 3.52.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLUGIN_LIBTOOL_FLAGS = -module -avoid-version
PNG = png$(EXEEXT)
PSP = psp$(EXEEXT)
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 3.52.0
WINDRES = 
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XMLLINT = xmllint
YACC = yacc
YELP_LC_DIST = true
YELP_LC_MEDIA_LINKS = true
YFLAGS = 
abs_builddir = /home/thorwag/gxsm3-3.52.0/plug-ins/hard/MK3-EMU
abs_srcdir = /home/thorwag/gxsm3-3.52.0/plug-ins/hard/MK3-EMU
abs_top_builddir = /home/thorwag/gxsm3-3.52.0
abs_top_srcdir = /home/thorwag/gxsm3-3.52.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gsettingsschemadir = ${datarootdir}/glib-2.0/schemas
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = ${SHELL} /home/thorwag/gxsm3-3.52.0/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${prefix}/lib
libexecdir = ${exec_prefix}/libexec
libnetcdf_LIBS = -lnetcdf -lnetcdf_c++
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${prefix}/share/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
plugindir = ${prefix}/lib/gxsm3-plugins
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = /run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
AM_CPPFLAGS = -I.. -I$(includedir) `pkg-config --cflags glib-2.0 gtk+-3.0`
mk3dspemu_CFLAGS = $(GTK_CFLAGS) `pkg-config --cflags glib-2.0 gtk+-3.0`
mk3dspemu_CXXFLAGS = $(GTK_CXXFLAGS) `pkg-config --cflags glib-2.0 gtk+-3.0`
mk3dspemu_LDFLAGS = -lrt `pkg-config --libs glib-2.0 gtk+-3.0`
mk3dspemu_SOURCES = \
	FB_spm.c FB_spm.h \
	FB_spm_dataexchange.h \
	g_intrinsics.c g_intrinsics.h \
	FB_spm_statemaschine.c FB_spm_statemaschine.h \
	dataprocess.c dataprocess.h \
	pac_pll_emu.c \
	FB_spm_offsetmove.c FB_spm_offsetmove.h \
	FB_spm_areascan.c FB_spm_areascan.h \
	FB_spm_CoolRunner_puls.c FB_spm_CoolRunner_puls.h \
	FB_spm_probe.c FB_spm_probe.h \
	FB_spm_autoapproach.c FB_spm_autoapproach.h \
	FB_spm_dsoszi.c \
	SR3PRO_A810Driver.h \
	ReadWrite_GPIO.c ReadWrite_GPIO.h \
        SR3_flash_support.c SR3_flash_support.h \
	spm_log.c spm_log.h \
	dspemu_app.c dspemu_app.h 		\
	dspemu_app_window.c dspemu_app_window.h 	\
	dspemu_app_prefs.c dspemu_app_prefs.h 	\
	resources.c

BUILT_SOURCES = \
	resources.c 				\
	gschemas.compiled

gsettings_SCHEMAS = \
	org.gtk.mk3dspemu.gschema.xml

EXTRA_DIST = \
	window.ui 				\
	app-menu.ui 				\
	prefs.ui 				\
	dspemu_app.gresource.xml 		\
	org.gtk.dspemu_app.gschema.xml

CLEANFILES = \
	gschemas.compiled

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu plug-ins/hard/MK3-EMU/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu plug-ins/hard/MK3-EMU/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

mk3dspemu$(EXEEXT): $(mk3dspemu_OBJECTS) $(mk3dspemu_DEPENDENCIES) $(EXTRA_mk3dspemu_DEPENDENCIES) 
	@rm -f mk3dspemu$(EXEEXT)
	$(AM_V_CCLD)$(mk3dspemu_LINK) $(mk3dspemu_OBJECTS) $(mk3dspemu_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/mk3dspemu-FB_spm.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-FB_spm_areascan.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-FB_spm_probe.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-SR3_flash_support.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-dataprocess.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-dspemu_app.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-dspemu_app_prefs.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-dspemu_app_window.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-g_intrinsics.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-pac_pll_emu.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-resources.Po # am--include-marker
#include ./$(DEPDIR)/mk3dspemu-spm_log.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mk3dspemu-FB_spm.o: FB_spm.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm.o -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm.Tpo -c -o mk3dspemu-FB_spm.o `test -f 'FB_spm.c' || echo '$(srcdir)/'`FB_spm.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm.Tpo $(DEPDIR)/mk3dspemu-FB_spm.Po
#	$(AM_V_CC)source='FB_spm.c' object='mk3dspemu-FB_spm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm.o `test -f 'FB_spm.c' || echo '$(srcdir)/'`FB_spm.c

mk3dspemu-FB_spm.obj: FB_spm.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm.Tpo -c -o mk3dspemu-FB_spm.obj `if test -f 'FB_spm.c'; then $(CYGPATH_W) 'FB_spm.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm.Tpo $(DEPDIR)/mk3dspemu-FB_spm.Po
#	$(AM_V_CC)source='FB_spm.c' object='mk3dspemu-FB_spm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm.obj `if test -f 'FB_spm.c'; then $(CYGPATH_W) 'FB_spm.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm.c'; fi`

mk3dspemu-g_intrinsics.o: g_intrinsics.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-g_intrinsics.o -MD -MP -MF $(DEPDIR)/mk3dspemu-g_intrinsics.Tpo -c -o mk3dspemu-g_intrinsics.o `test -f 'g_intrinsics.c' || echo '$(srcdir)/'`g_intrinsics.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-g_intrinsics.Tpo $(DEPDIR)/mk3dspemu-g_intrinsics.Po
#	$(AM_V_CC)source='g_intrinsics.c' object='mk3dspemu-g_intrinsics.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-g_intrinsics.o `test -f 'g_intrinsics.c' || echo '$(srcdir)/'`g_intrinsics.c

mk3dspemu-g_intrinsics.obj: g_intrinsics.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-g_intrinsics.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-g_intrinsics.Tpo -c -o mk3dspemu-g_intrinsics.obj `if test -f 'g_intrinsics.c'; then $(CYGPATH_W) 'g_intrinsics.c'; else $(CYGPATH_W) '$(srcdir)/g_intrinsics.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-g_intrinsics.Tpo $(DEPDIR)/mk3dspemu-g_intrinsics.Po
#	$(AM_V_CC)source='g_intrinsics.c' object='mk3dspemu-g_intrinsics.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-g_intrinsics.obj `if test -f 'g_intrinsics.c'; then $(CYGPATH_W) 'g_intrinsics.c'; else $(CYGPATH_W) '$(srcdir)/g_intrinsics.c'; fi`

mk3dspemu-FB_spm_statemaschine.o: FB_spm_statemaschine.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_statemaschine.o -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Tpo -c -o mk3dspemu-FB_spm_statemaschine.o `test -f 'FB_spm_statemaschine.c' || echo '$(srcdir)/'`FB_spm_statemaschine.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Tpo $(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Po
#	$(AM_V_CC)source='FB_spm_statemaschine.c' object='mk3dspemu-FB_spm_statemaschine.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_statemaschine.o `test -f 'FB_spm_statemaschine.c' || echo '$(srcdir)/'`FB_spm_statemaschine.c

mk3dspemu-FB_spm_statemaschine.obj: FB_spm_statemaschine.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_statemaschine.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Tpo -c -o mk3dspemu-FB_spm_statemaschine.obj `if test -f 'FB_spm_statemaschine.c'; then $(CYGPATH_W) 'FB_spm_statemaschine.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_statemaschine.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Tpo $(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Po
#	$(AM_V_CC)source='FB_spm_statemaschine.c' object='mk3dspemu-FB_spm_statemaschine.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_statemaschine.obj `if test -f 'FB_spm_statemaschine.c'; then $(CYGPATH_W) 'FB_spm_statemaschine.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_statemaschine.c'; fi`

mk3dspemu-dataprocess.o: dataprocess.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-dataprocess.o -MD -MP -MF $(DEPDIR)/mk3dspemu-dataprocess.Tpo -c -o mk3dspemu-dataprocess.o `test -f 'dataprocess.c' || echo '$(srcdir)/'`dataprocess.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-dataprocess.Tpo $(DEPDIR)/mk3dspemu-dataprocess.Po
#	$(AM_V_CC)source='dataprocess.c' object='mk3dspemu-dataprocess.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-dataprocess.o `test -f 'dataprocess.c' || echo '$(srcdir)/'`dataprocess.c

mk3dspemu-dataprocess.obj: dataprocess.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-dataprocess.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-dataprocess.Tpo -c -o mk3dspemu-dataprocess.obj `if test -f 'dataprocess.c'; then $(CYGPATH_W) 'dataprocess.c'; else $(CYGPATH_W) '$(srcdir)/dataprocess.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-dataprocess.Tpo $(DEPDIR)/mk3dspemu-dataprocess.Po
#	$(AM_V_CC)source='dataprocess.c' object='mk3dspemu-dataprocess.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-dataprocess.obj `if test -f 'dataprocess.c'; then $(CYGPATH_W) 'dataprocess.c'; else $(CYGPATH_W) '$(srcdir)/dataprocess.c'; fi`

mk3dspemu-pac_pll_emu.o: pac_pll_emu.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-pac_pll_emu.o -MD -MP -MF $(DEPDIR)/mk3dspemu-pac_pll_emu.Tpo -c -o mk3dspemu-pac_pll_emu.o `test -f 'pac_pll_emu.c' || echo '$(srcdir)/'`pac_pll_emu.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-pac_pll_emu.Tpo $(DEPDIR)/mk3dspemu-pac_pll_emu.Po
#	$(AM_V_CC)source='pac_pll_emu.c' object='mk3dspemu-pac_pll_emu.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-pac_pll_emu.o `test -f 'pac_pll_emu.c' || echo '$(srcdir)/'`pac_pll_emu.c

mk3dspemu-pac_pll_emu.obj: pac_pll_emu.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-pac_pll_emu.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-pac_pll_emu.Tpo -c -o mk3dspemu-pac_pll_emu.obj `if test -f 'pac_pll_emu.c'; then $(CYGPATH_W) 'pac_pll_emu.c'; else $(CYGPATH_W) '$(srcdir)/pac_pll_emu.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-pac_pll_emu.Tpo $(DEPDIR)/mk3dspemu-pac_pll_emu.Po
#	$(AM_V_CC)source='pac_pll_emu.c' object='mk3dspemu-pac_pll_emu.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-pac_pll_emu.obj `if test -f 'pac_pll_emu.c'; then $(CYGPATH_W) 'pac_pll_emu.c'; else $(CYGPATH_W) '$(srcdir)/pac_pll_emu.c'; fi`

mk3dspemu-FB_spm_offsetmove.o: FB_spm_offsetmove.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_offsetmove.o -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Tpo -c -o mk3dspemu-FB_spm_offsetmove.o `test -f 'FB_spm_offsetmove.c' || echo '$(srcdir)/'`FB_spm_offsetmove.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Tpo $(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Po
#	$(AM_V_CC)source='FB_spm_offsetmove.c' object='mk3dspemu-FB_spm_offsetmove.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_offsetmove.o `test -f 'FB_spm_offsetmove.c' || echo '$(srcdir)/'`FB_spm_offsetmove.c

mk3dspemu-FB_spm_offsetmove.obj: FB_spm_offsetmove.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_offsetmove.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Tpo -c -o mk3dspemu-FB_spm_offsetmove.obj `if test -f 'FB_spm_offsetmove.c'; then $(CYGPATH_W) 'FB_spm_offsetmove.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_offsetmove.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Tpo $(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Po
#	$(AM_V_CC)source='FB_spm_offsetmove.c' object='mk3dspemu-FB_spm_offsetmove.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_offsetmove.obj `if test -f 'FB_spm_offsetmove.c'; then $(CYGPATH_W) 'FB_spm_offsetmove.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_offsetmove.c'; fi`

mk3dspemu-FB_spm_areascan.o: FB_spm_areascan.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_areascan.o -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_areascan.Tpo -c -o mk3dspemu-FB_spm_areascan.o `test -f 'FB_spm_areascan.c' || echo '$(srcdir)/'`FB_spm_areascan.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_areascan.Tpo $(DEPDIR)/mk3dspemu-FB_spm_areascan.Po
#	$(AM_V_CC)source='FB_spm_areascan.c' object='mk3dspemu-FB_spm_areascan.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_areascan.o `test -f 'FB_spm_areascan.c' || echo '$(srcdir)/'`FB_spm_areascan.c

mk3dspemu-FB_spm_areascan.obj: FB_spm_areascan.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_areascan.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_areascan.Tpo -c -o mk3dspemu-FB_spm_areascan.obj `if test -f 'FB_spm_areascan.c'; then $(CYGPATH_W) 'FB_spm_areascan.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_areascan.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_areascan.Tpo $(DEPDIR)/mk3dspemu-FB_spm_areascan.Po
#	$(AM_V_CC)source='FB_spm_areascan.c' object='mk3dspemu-FB_spm_areascan.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_areascan.obj `if test -f 'FB_spm_areascan.c'; then $(CYGPATH_W) 'FB_spm_areascan.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_areascan.c'; fi`

mk3dspemu-FB_spm_CoolRunner_puls.o: FB_spm_CoolRunner_puls.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_CoolRunner_puls.o -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Tpo -c -o mk3dspemu-FB_spm_CoolRunner_puls.o `test -f 'FB_spm_CoolRunner_puls.c' || echo '$(srcdir)/'`FB_spm_CoolRunner_puls.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Tpo $(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Po
#	$(AM_V_CC)source='FB_spm_CoolRunner_puls.c' object='mk3dspemu-FB_spm_CoolRunner_puls.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_CoolRunner_puls.o `test -f 'FB_spm_CoolRunner_puls.c' || echo '$(srcdir)/'`FB_spm_CoolRunner_puls.c

mk3dspemu-FB_spm_CoolRunner_puls.obj: FB_spm_CoolRunner_puls.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_CoolRunner_puls.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Tpo -c -o mk3dspemu-FB_spm_CoolRunner_puls.obj `if test -f 'FB_spm_CoolRunner_puls.c'; then $(CYGPATH_W) 'FB_spm_CoolRunner_puls.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_CoolRunner_puls.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Tpo $(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Po
#	$(AM_V_CC)source='FB_spm_CoolRunner_puls.c' object='mk3dspemu-FB_spm_CoolRunner_puls.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_CoolRunner_puls.obj `if test -f 'FB_spm_CoolRunner_puls.c'; then $(CYGPATH_W) 'FB_spm_CoolRunner_puls.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_CoolRunner_puls.c'; fi`

mk3dspemu-FB_spm_probe.o: FB_spm_probe.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_probe.o -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_probe.Tpo -c -o mk3dspemu-FB_spm_probe.o `test -f 'FB_spm_probe.c' || echo '$(srcdir)/'`FB_spm_probe.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_probe.Tpo $(DEPDIR)/mk3dspemu-FB_spm_probe.Po
#	$(AM_V_CC)source='FB_spm_probe.c' object='mk3dspemu-FB_spm_probe.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_probe.o `test -f 'FB_spm_probe.c' || echo '$(srcdir)/'`FB_spm_probe.c

mk3dspemu-FB_spm_probe.obj: FB_spm_probe.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_probe.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_probe.Tpo -c -o mk3dspemu-FB_spm_probe.obj `if test -f 'FB_spm_probe.c'; then $(CYGPATH_W) 'FB_spm_probe.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_probe.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_probe.Tpo $(DEPDIR)/mk3dspemu-FB_spm_probe.Po
#	$(AM_V_CC)source='FB_spm_probe.c' object='mk3dspemu-FB_spm_probe.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_probe.obj `if test -f 'FB_spm_probe.c'; then $(CYGPATH_W) 'FB_spm_probe.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_probe.c'; fi`

mk3dspemu-FB_spm_autoapproach.o: FB_spm_autoapproach.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_autoapproach.o -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Tpo -c -o mk3dspemu-FB_spm_autoapproach.o `test -f 'FB_spm_autoapproach.c' || echo '$(srcdir)/'`FB_spm_autoapproach.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Tpo $(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Po
#	$(AM_V_CC)source='FB_spm_autoapproach.c' object='mk3dspemu-FB_spm_autoapproach.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_autoapproach.o `test -f 'FB_spm_autoapproach.c' || echo '$(srcdir)/'`FB_spm_autoapproach.c

mk3dspemu-FB_spm_autoapproach.obj: FB_spm_autoapproach.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_autoapproach.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Tpo -c -o mk3dspemu-FB_spm_autoapproach.obj `if test -f 'FB_spm_autoapproach.c'; then $(CYGPATH_W) 'FB_spm_autoapproach.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_autoapproach.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Tpo $(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Po
#	$(AM_V_CC)source='FB_spm_autoapproach.c' object='mk3dspemu-FB_spm_autoapproach.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_autoapproach.obj `if test -f 'FB_spm_autoapproach.c'; then $(CYGPATH_W) 'FB_spm_autoapproach.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_autoapproach.c'; fi`

mk3dspemu-FB_spm_dsoszi.o: FB_spm_dsoszi.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_dsoszi.o -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Tpo -c -o mk3dspemu-FB_spm_dsoszi.o `test -f 'FB_spm_dsoszi.c' || echo '$(srcdir)/'`FB_spm_dsoszi.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Tpo $(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Po
#	$(AM_V_CC)source='FB_spm_dsoszi.c' object='mk3dspemu-FB_spm_dsoszi.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_dsoszi.o `test -f 'FB_spm_dsoszi.c' || echo '$(srcdir)/'`FB_spm_dsoszi.c

mk3dspemu-FB_spm_dsoszi.obj: FB_spm_dsoszi.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-FB_spm_dsoszi.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Tpo -c -o mk3dspemu-FB_spm_dsoszi.obj `if test -f 'FB_spm_dsoszi.c'; then $(CYGPATH_W) 'FB_spm_dsoszi.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_dsoszi.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Tpo $(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Po
#	$(AM_V_CC)source='FB_spm_dsoszi.c' object='mk3dspemu-FB_spm_dsoszi.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-FB_spm_dsoszi.obj `if test -f 'FB_spm_dsoszi.c'; then $(CYGPATH_W) 'FB_spm_dsoszi.c'; else $(CYGPATH_W) '$(srcdir)/FB_spm_dsoszi.c'; fi`

mk3dspemu-ReadWrite_GPIO.o: ReadWrite_GPIO.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-ReadWrite_GPIO.o -MD -MP -MF $(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Tpo -c -o mk3dspemu-ReadWrite_GPIO.o `test -f 'ReadWrite_GPIO.c' || echo '$(srcdir)/'`ReadWrite_GPIO.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Tpo $(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Po
#	$(AM_V_CC)source='ReadWrite_GPIO.c' object='mk3dspemu-ReadWrite_GPIO.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-ReadWrite_GPIO.o `test -f 'ReadWrite_GPIO.c' || echo '$(srcdir)/'`ReadWrite_GPIO.c

mk3dspemu-ReadWrite_GPIO.obj: ReadWrite_GPIO.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-ReadWrite_GPIO.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Tpo -c -o mk3dspemu-ReadWrite_GPIO.obj `if test -f 'ReadWrite_GPIO.c'; then $(CYGPATH_W) 'ReadWrite_GPIO.c'; else $(CYGPATH_W) '$(srcdir)/ReadWrite_GPIO.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Tpo $(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Po
#	$(AM_V_CC)source='ReadWrite_GPIO.c' object='mk3dspemu-ReadWrite_GPIO.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-ReadWrite_GPIO.obj `if test -f 'ReadWrite_GPIO.c'; then $(CYGPATH_W) 'ReadWrite_GPIO.c'; else $(CYGPATH_W) '$(srcdir)/ReadWrite_GPIO.c'; fi`

mk3dspemu-SR3_flash_support.o: SR3_flash_support.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-SR3_flash_support.o -MD -MP -MF $(DEPDIR)/mk3dspemu-SR3_flash_support.Tpo -c -o mk3dspemu-SR3_flash_support.o `test -f 'SR3_flash_support.c' || echo '$(srcdir)/'`SR3_flash_support.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-SR3_flash_support.Tpo $(DEPDIR)/mk3dspemu-SR3_flash_support.Po
#	$(AM_V_CC)source='SR3_flash_support.c' object='mk3dspemu-SR3_flash_support.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-SR3_flash_support.o `test -f 'SR3_flash_support.c' || echo '$(srcdir)/'`SR3_flash_support.c

mk3dspemu-SR3_flash_support.obj: SR3_flash_support.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-SR3_flash_support.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-SR3_flash_support.Tpo -c -o mk3dspemu-SR3_flash_support.obj `if test -f 'SR3_flash_support.c'; then $(CYGPATH_W) 'SR3_flash_support.c'; else $(CYGPATH_W) '$(srcdir)/SR3_flash_support.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-SR3_flash_support.Tpo $(DEPDIR)/mk3dspemu-SR3_flash_support.Po
#	$(AM_V_CC)source='SR3_flash_support.c' object='mk3dspemu-SR3_flash_support.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-SR3_flash_support.obj `if test -f 'SR3_flash_support.c'; then $(CYGPATH_W) 'SR3_flash_support.c'; else $(CYGPATH_W) '$(srcdir)/SR3_flash_support.c'; fi`

mk3dspemu-spm_log.o: spm_log.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-spm_log.o -MD -MP -MF $(DEPDIR)/mk3dspemu-spm_log.Tpo -c -o mk3dspemu-spm_log.o `test -f 'spm_log.c' || echo '$(srcdir)/'`spm_log.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-spm_log.Tpo $(DEPDIR)/mk3dspemu-spm_log.Po
#	$(AM_V_CC)source='spm_log.c' object='mk3dspemu-spm_log.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-spm_log.o `test -f 'spm_log.c' || echo '$(srcdir)/'`spm_log.c

mk3dspemu-spm_log.obj: spm_log.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-spm_log.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-spm_log.Tpo -c -o mk3dspemu-spm_log.obj `if test -f 'spm_log.c'; then $(CYGPATH_W) 'spm_log.c'; else $(CYGPATH_W) '$(srcdir)/spm_log.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-spm_log.Tpo $(DEPDIR)/mk3dspemu-spm_log.Po
#	$(AM_V_CC)source='spm_log.c' object='mk3dspemu-spm_log.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-spm_log.obj `if test -f 'spm_log.c'; then $(CYGPATH_W) 'spm_log.c'; else $(CYGPATH_W) '$(srcdir)/spm_log.c'; fi`

mk3dspemu-dspemu_app.o: dspemu_app.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-dspemu_app.o -MD -MP -MF $(DEPDIR)/mk3dspemu-dspemu_app.Tpo -c -o mk3dspemu-dspemu_app.o `test -f 'dspemu_app.c' || echo '$(srcdir)/'`dspemu_app.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-dspemu_app.Tpo $(DEPDIR)/mk3dspemu-dspemu_app.Po
#	$(AM_V_CC)source='dspemu_app.c' object='mk3dspemu-dspemu_app.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-dspemu_app.o `test -f 'dspemu_app.c' || echo '$(srcdir)/'`dspemu_app.c

mk3dspemu-dspemu_app.obj: dspemu_app.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-dspemu_app.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-dspemu_app.Tpo -c -o mk3dspemu-dspemu_app.obj `if test -f 'dspemu_app.c'; then $(CYGPATH_W) 'dspemu_app.c'; else $(CYGPATH_W) '$(srcdir)/dspemu_app.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-dspemu_app.Tpo $(DEPDIR)/mk3dspemu-dspemu_app.Po
#	$(AM_V_CC)source='dspemu_app.c' object='mk3dspemu-dspemu_app.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-dspemu_app.obj `if test -f 'dspemu_app.c'; then $(CYGPATH_W) 'dspemu_app.c'; else $(CYGPATH_W) '$(srcdir)/dspemu_app.c'; fi`

mk3dspemu-dspemu_app_window.o: dspemu_app_window.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-dspemu_app_window.o -MD -MP -MF $(DEPDIR)/mk3dspemu-dspemu_app_window.Tpo -c -o mk3dspemu-dspemu_app_window.o `test -f 'dspemu_app_window.c' || echo '$(srcdir)/'`dspemu_app_window.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-dspemu_app_window.Tpo $(DEPDIR)/mk3dspemu-dspemu_app_window.Po
#	$(AM_V_CC)source='dspemu_app_window.c' object='mk3dspemu-dspemu_app_window.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-dspemu_app_window.o `test -f 'dspemu_app_window.c' || echo '$(srcdir)/'`dspemu_app_window.c

mk3dspemu-dspemu_app_window.obj: dspemu_app_window.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-dspemu_app_window.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-dspemu_app_window.Tpo -c -o mk3dspemu-dspemu_app_window.obj `if test -f 'dspemu_app_window.c'; then $(CYGPATH_W) 'dspemu_app_window.c'; else $(CYGPATH_W) '$(srcdir)/dspemu_app_window.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-dspemu_app_window.Tpo $(DEPDIR)/mk3dspemu-dspemu_app_window.Po
#	$(AM_V_CC)source='dspemu_app_window.c' object='mk3dspemu-dspemu_app_window.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-dspemu_app_window.obj `if test -f 'dspemu_app_window.c'; then $(CYGPATH_W) 'dspemu_app_window.c'; else $(CYGPATH_W) '$(srcdir)/dspemu_app_window.c'; fi`

mk3dspemu-dspemu_app_prefs.o: dspemu_app_prefs.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-dspemu_app_prefs.o -MD -MP -MF $(DEPDIR)/mk3dspemu-dspemu_app_prefs.Tpo -c -o mk3dspemu-dspemu_app_prefs.o `test -f 'dspemu_app_prefs.c' || echo '$(srcdir)/'`dspemu_app_prefs.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-dspemu_app_prefs.Tpo $(DEPDIR)/mk3dspemu-dspemu_app_prefs.Po
#	$(AM_V_CC)source='dspemu_app_prefs.c' object='mk3dspemu-dspemu_app_prefs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-dspemu_app_prefs.o `test -f 'dspemu_app_prefs.c' || echo '$(srcdir)/'`dspemu_app_prefs.c

mk3dspemu-dspemu_app_prefs.obj: dspemu_app_prefs.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-dspemu_app_prefs.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-dspemu_app_prefs.Tpo -c -o mk3dspemu-dspemu_app_prefs.obj `if test -f 'dspemu_app_prefs.c'; then $(CYGPATH_W) 'dspemu_app_prefs.c'; else $(CYGPATH_W) '$(srcdir)/dspemu_app_prefs.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-dspemu_app_prefs.Tpo $(DEPDIR)/mk3dspemu-dspemu_app_prefs.Po
#	$(AM_V_CC)source='dspemu_app_prefs.c' object='mk3dspemu-dspemu_app_prefs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-dspemu_app_prefs.obj `if test -f 'dspemu_app_prefs.c'; then $(CYGPATH_W) 'dspemu_app_prefs.c'; else $(CYGPATH_W) '$(srcdir)/dspemu_app_prefs.c'; fi`

mk3dspemu-resources.o: resources.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-resources.o -MD -MP -MF $(DEPDIR)/mk3dspemu-resources.Tpo -c -o mk3dspemu-resources.o `test -f 'resources.c' || echo '$(srcdir)/'`resources.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-resources.Tpo $(DEPDIR)/mk3dspemu-resources.Po
#	$(AM_V_CC)source='resources.c' object='mk3dspemu-resources.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-resources.o `test -f 'resources.c' || echo '$(srcdir)/'`resources.c

mk3dspemu-resources.obj: resources.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -MT mk3dspemu-resources.obj -MD -MP -MF $(DEPDIR)/mk3dspemu-resources.Tpo -c -o mk3dspemu-resources.obj `if test -f 'resources.c'; then $(CYGPATH_W) 'resources.c'; else $(CYGPATH_W) '$(srcdir)/resources.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/mk3dspemu-resources.Tpo $(DEPDIR)/mk3dspemu-resources.Po
#	$(AM_V_CC)source='resources.c' object='mk3dspemu-resources.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mk3dspemu_CFLAGS) $(CFLAGS) -c -o mk3dspemu-resources.obj `if test -f 'resources.c'; then $(CYGPATH_W) 'resources.c'; else $(CYGPATH_W) '$(srcdir)/resources.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_areascan.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_probe.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-SR3_flash_support.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-dataprocess.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-dspemu_app.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-dspemu_app_prefs.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-dspemu_app_window.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-g_intrinsics.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-pac_pll_emu.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-resources.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-spm_log.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_CoolRunner_puls.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_areascan.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_autoapproach.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_dsoszi.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_offsetmove.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_probe.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-FB_spm_statemaschine.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-ReadWrite_GPIO.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-SR3_flash_support.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-dataprocess.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-dspemu_app.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-dspemu_app_prefs.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-dspemu_app_window.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-g_intrinsics.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-pac_pll_emu.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-resources.Po
	-rm -f ./$(DEPDIR)/mk3dspemu-spm_log.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


resources.c: mk3dspemu.gresource.xml $(shell $(GLIB_COMPILE_RESOURCES) --sourcedir=$(srcdir) --generate-dependencies $(srcdir)/mk3dspemu.gresource.xml)
	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) $(srcdir)/mk3dspemu.gresource.xml \
		--target=$@ --sourcedir=$(srcdir) --generate-source


.PHONY : uninstall-gsettings-schemas install-gsettings-schemas clean-gsettings-schemas

mostlyclean-am: clean-gsettings-schemas

gsettings__enum_file = $(addsuffix .enums.xml,$(gsettings_ENUM_NAMESPACE))

%.gschema.valid: %.gschema.xml $(gsettings__enum_file)
	$(AM_V_GEN) $(GLIB_COMPILE_SCHEMAS) --strict --dry-run $(addprefix --schema-file=,$(gsettings__enum_file)) --schema-file=$< && mkdir -p $(@D) && touch $@

all-am: $(gsettings_SCHEMAS:.xml=.valid)
uninstall-am: uninstall-gsettings-schemas
install-data-am: install-gsettings-schemas

.SECONDARY: $(gsettings_SCHEMAS)

install-gsettings-schemas: $(gsettings_SCHEMAS) $(gsettings__enum_file)
	@$(NORMAL_INSTALL)
	if test -n "$^"; then \
		test -z "$(gsettingsschemadir)" || $(MKDIR_P) "$(DESTDIR)$(gsettingsschemadir)"; \
		$(INSTALL_DATA) $^ "$(DESTDIR)$(gsettingsschemadir)"; \
		test -n "$(GSETTINGS_DISABLE_SCHEMAS_COMPILE)$(DESTDIR)" || $(GLIB_COMPILE_SCHEMAS) $(gsettingsschemadir); \
	fi

uninstall-gsettings-schemas:
	@$(NORMAL_UNINSTALL)
	@list='$(gsettings_SCHEMAS) $(gsettings__enum_file)'; test -n "$(gsettingsschemadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gsettingsschemadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gsettingsschemadir)" && rm -f $$files
	test -n "$(GSETTINGS_DISABLE_SCHEMAS_COMPILE)$(DESTDIR)" || $(GLIB_COMPILE_SCHEMAS) $(gsettingsschemadir)

clean-gsettings-schemas:
	rm -f $(gsettings_SCHEMAS:.xml=.valid) $(gsettings__enum_file)

ifdef gsettings_ENUM_NAMESPACE
$(gsettings__enum_file): $(gsettings_ENUM_FILES)
	$(AM_V_GEN) glib-mkenums --comments '<!-- @comment@ -->' --fhead "<schemalist>" --vhead "  <@type@ id='$(gsettings_ENUM_NAMESPACE).@EnumName@'>" --vprod "    <value nick='@valuenick@' value='@valuenum@'/>" --vtail "  </@type@>" --ftail "</schemalist>" $^ > $@.tmp && mv $@.tmp $@
endif


gschemas.compiled: org.gtk.mk3dspemu.gschema.xml
	$(GLIB_COMPILE_SCHEMAS) .

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
